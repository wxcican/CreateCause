package com.mzth.createcause.model.user.impl;import android.content.Context;import android.graphics.Color;import android.text.TextUtils;import com.lljjcoder.citypickerview.widget.CityPicker;import com.lzy.okgo.OkGo;import com.lzy.okgo.callback.StringCallback;import com.mzth.createcause.model.user.IUserInfoModel;import com.mzth.createcause.util.ConfigUtil;/** * Created by Administrator on 2017/10/12 0012. */public class UserInfoModel implements IUserInfoModel {    private static IUserInfoModel mIUserInfoModel;    private UserInfoModel() {    }    public static IUserInfoModel getIUserInfoModel() {        if (mIUserInfoModel == null) {            mIUserInfoModel = new UserInfoModel();        }        return mIUserInfoModel;    }    @Override    public void getCity(Context context, CityPicker.OnCityItemClickListener onCityItemClickListener) {        CityPicker cityPicker = new CityPicker.Builder(context)                .textSize(15)                //标题                .title("地址选择")                //标题栏背景                .titleBackgroundColor("#FFFFFF")                //确认字体颜色                .confirTextColor("#696969")                //取消字体颜色                .cancelTextColor("#696969")                //默认省                .province("北京市")                //默认市                .city("北京市")                //默认区                .district("朝阳区")                //文字颜色                .textColor(Color.parseColor("#000000"))                //省份的滑轮是否循环滚动                .provinceCyclic(false)                //市的滑轮是否循环滚动                .cityCyclic(false)                //区份的滑轮是否循环滚动                .districtCyclic(false)                //滚轮显示item个数                .visibleItemsCount(7)                //滚轮pading                .itemPadding(10)                //是否俩级联动                .onlyShowProvinceAndCity(false)                .build();        cityPicker.show();        //监听方法，获取选择结果        cityPicker.setOnCityItemClickListener(onCityItemClickListener);    }    @Override    public void queryUserInfoData(String user_Id, String auty_key, StringCallback callBack) {        if (!TextUtils.isEmpty(user_Id) && !TextUtils.isEmpty(auty_key)) {            OkGo.<String>post(ConfigUtil.USER_INFO_DATA)                    .params("user_id", user_Id)                    .params("auth_key", auty_key)                    .execute(callBack);        }    }}