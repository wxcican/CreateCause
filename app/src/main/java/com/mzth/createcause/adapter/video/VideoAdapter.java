package com.mzth.createcause.adapter.video;import android.app.Activity;import android.graphics.Bitmap;import android.text.TextUtils;import android.view.View;import android.widget.ImageView;import com.bumptech.glide.Glide;import com.bumptech.glide.request.RequestOptions;import com.chad.library.adapter.base.BaseQuickAdapter;import com.chad.library.adapter.base.BaseViewHolder;import com.mzth.createcause.R;import com.mzth.createcause.entity.VideoContent;import com.mzth.createcause.entity.core.CoreContentEntity.InfromationContentList;import com.mzth.createcause.util.CommonUtil;import com.shuyu.gsyvideoplayer.utils.OrientationUtils;import com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer;import com.squareup.picasso.Picasso;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;/** * Created by Administrator on 2017/10/9 0009. */public class VideoAdapter extends BaseQuickAdapter<InfromationContentList, BaseViewHolder> {    private OrientationUtils mOrientationUtils;    private Activity mActiity;    private Map<Integer, StandardGSYVideoPlayer> mStandardGSYVideoPlayers = new HashMap<>();    public VideoAdapter(List<InfromationContentList> data, Activity activity) {        super(R.layout.item_video_content, data);        mActiity = activity;    }    @Override    protected void convert(BaseViewHolder helper, InfromationContentList item) {        helper.setText(R.id.tv_video_content_1, item.getTitle());        helper.setText(R.id.tv_video_content_2, item.getCat_name() + "\u3000" + item.getComment() + "条评论\u3000" + item.getAdd_time());        final StandardGSYVideoPlayer gdy_item_video_content = helper.getView(R.id.gdy_item_video_content);        mStandardGSYVideoPlayers.put(helper.getLayoutPosition(), gdy_item_video_content);        //设置资源        gdy_item_video_content.setUp(item.getVid(), true, null, "");        ImageView mImageView = new ImageView(mContext);        mImageView.setScaleType(ImageView.ScaleType.FIT_XY);        Glide.with(mContext)                .load(item.getImage())                .apply(RequestOptions.centerInsideTransform()                .error(R.drawable.icon_default)                        .placeholder(R.drawable.icon_default)                        .centerCrop()                        .fallback(R.drawable.icon_default)                )                .into(mImageView);        gdy_item_video_content.setThumbImageView(mImageView);        //设置title        gdy_item_video_content.getTitleTextView().setVisibility(View.GONE);        //设置返回键        gdy_item_video_content.getBackButton().setVisibility(View.GONE);        mOrientationUtils = new OrientationUtils(mActiity, gdy_item_video_content);        mOrientationUtils.setEnable(false);        //屏幕滑动改变进度、声音        gdy_item_video_content.setIsTouchWiget(true);        //播放屏幕可触摸        gdy_item_video_content.setIsTouchWiget(true);        //关闭自动旋转        gdy_item_video_content.setRotateViewAuto(true);        //动画        gdy_item_video_content.setShowFullAnimation(false);        //全屏锁定        gdy_item_video_content.setNeedLockFull(true);        gdy_item_video_content.getFullscreenButton().setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                gdy_item_video_content.startWindowFullscreen(mContext, false, true);            }        });    }    public Map<Integer, StandardGSYVideoPlayer> getStandardGSYVideoPlayers() {        return mStandardGSYVideoPlayers;    }}