package com.mzth.createcause.adapter.video;import android.app.Activity;import android.content.Intent;import android.view.LayoutInflater;import android.view.View;import android.widget.EditText;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.bumptech.glide.Glide;import com.bumptech.glide.request.RequestOptions;import com.chad.library.adapter.base.BaseMultiItemQuickAdapter;import com.chad.library.adapter.base.BaseViewHolder;import com.mzth.createcause.R;import com.mzth.createcause.adapter.news.NewsInfoAdapter;import com.mzth.createcause.entity.core.NewsInfoEntity;import com.mzth.createcause.entity.VideoInfoEntity;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.view.fragment.news.IMoreCollectShareListener;import com.mzth.createcause.view.fragment.news.impl.ReleaseUserInfoActivity;import com.shuyu.gsyvideoplayer.utils.OrientationUtils;import com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer;import java.util.List;/** * Created by 视频详情适配器 on 2017/10/27 0027. */public class VideoInfoAdapter extends BaseMultiItemQuickAdapter<NewsInfoEntity, BaseViewHolder> {    private Activity activity;    private List<NewsInfoEntity> mNewsInfoEntitys;    /**     * Same as QuickAdapter#QuickAdapter(Context,int) but with     * some initialization data.     *     * @param data A new list is created out of this one to avoid mutable list     */    public VideoInfoAdapter(List<NewsInfoEntity> data, Activity activity) {        super(data);        this.mNewsInfoEntitys=data;        addItemType(NewsInfoEntity.TYPE_USER, R.layout.item_vieo_info_content);        addItemType(NewsInfoEntity.TYPE_NAVIGATION, R.layout.item_news_title);        addItemType(NewsInfoEntity.TYPE_RECOMMEND, R.layout.item_news_about);        addItemType(NewsInfoEntity.TYPE_COMMEND, R.layout.item_news_comment);        addItemType(NewsInfoEntity.TYPE_REPLY, R.layout.item_news_reply);        addItemType(NewsInfoEntity.TYPE_MORE, R.layout.item_news_findall);        addItemType(NewsInfoEntity.TYPE_EDIT, R.layout.item_news_comment_et);        this.activity = activity;    }    @Override    protected void convert(final BaseViewHolder helper, final NewsInfoEntity item) {        switch (helper.getItemViewType()) {            case NewsInfoEntity.TYPE_USER:                StandardGSYVideoPlayer mStandardGSYVideoPlayer = helper.getView(R.id.gsy_item_video_info_content);                initStandardGSYVideoPlayer(mStandardGSYVideoPlayer,item.getUserVideo(),item.getUserVideoImage());                helper.setText(R.id.tv_item_video_info_content_1, item.getUserTitle());                helper.setText(R.id.tv_item_video_info_content_2, item.getUserName());                helper.setText(R.id.tv_item_video_info_content_3, item.getUserTime() + "\u3000" + item.getUserComment() + "条评论");                ImageView iv_item_news_info_title_1 = helper.getView(R.id.iv_item_video_info_content_1);                Glide.with(mContext)                        .load(item.getUserImg())                        .apply(RequestOptions.centerInsideTransform()                                .error(R.drawable.icon_r_def)                                .placeholder(R.drawable.icon_r_def)                                .fallback(R.drawable.icon_r_def)                                .centerCrop()                        )                        .into(iv_item_news_info_title_1);                helper.getView(R.id.ll_item_video_info_content_1).setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        if(mOnVideoAuthorInfoClickListener!=null){                            mOnVideoAuthorInfoClickListener.onVideoAuthorInfoClick(item.getUserID());                        }                    }                });                break;            case NewsInfoEntity.TYPE_NAVIGATION:                helper.setText(R.id.tv_item_news_info_T, item.getNaviGation());                break;            case NewsInfoEntity.TYPE_RECOMMEND:                helper.setText(R.id.tv_item_news_info_1, item.getRecommendTitle());                helper.setText(R.id.tv_item_news_info_2, item.getRecommendType() + "\u3000" + item.getRecommendComment() + "评论\u3000" + item.getRecommendTime());                String recommendImg = item.getRecommendImg();                ImageView iv_item_news_info_1 = helper.getView(R.id.iv_item_news_info_1);                Glide.with(mContext)                        .load(recommendImg)                        .apply(RequestOptions.centerInsideTransform()                                .error(R.drawable.icon_default)                                .placeholder(R.drawable.icon_default)                                .fallback(R.drawable.icon_default)                                .centerCrop()                        )                        .into(iv_item_news_info_1);                helper.getView(R.id.ll_item_news_info_about).setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        if (mOnVideoReCommendCliclListener != null) {                            mOnVideoReCommendCliclListener.onReCommendClicl(item.getRecommendId());                        }                    }                });                break;            case NewsInfoEntity.TYPE_COMMEND:                //头像                ImageView iv_item_item_news_info_comment_1 = helper.getView(R.id.iv_item_item_news_info_comment_1);                Glide.with(mContext)                        .load(item.getCommentImg())                        .apply(RequestOptions.centerInsideTransform()                                .error(R.drawable.icon_r_def)                                .placeholder(R.drawable.icon_r_def)                                .fallback(R.drawable.icon_r_def)                                .centerCrop())                        .into(iv_item_item_news_info_comment_1);                if (item.getCommentGood() == 1) {                    helper.setImageResource(R.id.iv_item_item_news_info_comment_2, R.drawable.icon_praise);                } else {                    helper.setImageResource(R.id.iv_item_item_news_info_comment_2, R.drawable.icon_no_praise);                }                //昵称                helper.setText(R.id.tv_item_item_news_info_comment_1, item.getCommentName());                //时间和回复量                helper.setText(R.id.tv_item_item_news_info_comment_2, item.getCommentTime() + "\u3000" + item.getCommentReplyNum() + "条回复");                //点赞量                helper.setText(R.id.tv_item_item_news_info_comment_3, item.getCommentGoodNum());                //内容                helper.setText(R.id.tv_item_item_news_info_comment_4, item.getCommentContent());                //回复                helper.getView(R.id.ll_item_item_news_info_comment).setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        if (mOnVideoReplyClickListener != null) {                            mOnVideoReplyClickListener.onReplyClick(item.getCommentId(), item.getCommentUserId(), item.getCommentName());                        }                    }                });                //点赞                final LinearLayout ll_item_item_news_info_good = helper.getView(R.id.ll_item_item_news_info_good);                ll_item_item_news_info_good.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        int good = Integer.parseInt(item.getCommentGoodNum());                        if (item.getCommentGood() == 1) {                            good--;                            helper.setImageResource(R.id.iv_item_item_news_info_comment_2, R.drawable.icon_no_praise);                            helper.setText(R.id.tv_item_item_news_info_comment_3, good + "");                        } else {                            good++;                            helper.setImageResource(R.id.iv_item_item_news_info_comment_2, R.drawable.icon_praise);                            helper.setText(R.id.tv_item_item_news_info_comment_3, good + "");                        }                        ll_item_item_news_info_good.setEnabled(false);                        if (mOnVideoGoodClickListener != null) {                            mOnVideoGoodClickListener.onVideoGoodClick(item.getCommentId(), item.getCommentGood() == 1 ? "2" : "1", helper.getLayoutPosition());                        }                    }                });                break;            case NewsInfoEntity.TYPE_REPLY:                helper.setText(R.id.tv_item_news_info_reply_name, item.getReplyName());                helper.setText(R.id.tv_item_news_info_reply_content, item.getReplyContent());                break;            case NewsInfoEntity.TYPE_MORE:                TextView tv_item_news_info_find = helper.getView(R.id.tv_item_news_info_find);                String moreText = item.getMoreText();                if (moreText.equals("查看更多评论")) {                    tv_item_news_info_find.setTextColor(mContext.getResources().getColor(R.color.colorMain));                    //查看更多评论                    tv_item_news_info_find.setOnClickListener(new View.OnClickListener() {                        @Override                        public void onClick(View v) {                            if(mOnVideoQueryMoreCommendCliclListener!=null){                                mOnVideoQueryMoreCommendCliclListener.onVideoQueryMoreCommendClicl();                            }                        }                    });                }                if (moreText.equals("暂无更多评论")||moreText.equals("暂无评论")) {                    tv_item_news_info_find.setTextColor(mContext.getResources().getColor(R.color.color_69));                    //查看更多评论                    tv_item_news_info_find.setOnClickListener(new View.OnClickListener() {                        @Override                        public void onClick(View v) {                            // CommonUtil.getCommonUtil().toast("没有更多评论");                        }                    });                }                tv_item_news_info_find.setText(moreText);                break;            case NewsInfoEntity.TYPE_EDIT:                //评论                helper.getView(R.id.et_item_news_info_et_et).setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        if (mOnVideoCommentCliclListener != null) {                            mOnVideoCommentCliclListener.onCommentClick();                        }                    }                });                //更多评论                helper.getView(R.id.ll_item_news_info_et_more).setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        if(msetOnVideoCommentCliclListener!=null){                            msetOnVideoCommentCliclListener.onMoreCommentClick();                        }                    }                });                //分享                helper.getView(R.id.ll_item_news_info_et_share).setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        if(mOnVideoShareClickListener!=null){                            mOnVideoShareClickListener.onVideoShareClick();                        }                    }                });                break;        }    }    private OnVideoCommentCliclListener mOnVideoCommentCliclListener;    private OnVideoMoreCommentCliclListener msetOnVideoCommentCliclListener;    private OnVideoReCommendCliclListener mOnVideoReCommendCliclListener;    private OnVideoReplyClickListener mOnVideoReplyClickListener;    private OnVideoQueryMoreCommendCliclListener mOnVideoQueryMoreCommendCliclListener;    private OnVideoGoodClickListener mOnVideoGoodClickListener;    private OnVideoShareClickListener mOnVideoShareClickListener;    private OnVideoAuthorInfoClickListener mOnVideoAuthorInfoClickListener;    public interface OnVideoAuthorInfoClickListener {        void onVideoAuthorInfoClick(String authID);    }    public interface OnVideoShareClickListener {        void onVideoShareClick();    }    public interface OnVideoGoodClickListener {        void onVideoGoodClick(String commentID, String type, int position);    }    public interface OnVideoQueryMoreCommendCliclListener{        void onVideoQueryMoreCommendClicl();    }    public interface OnVideoReCommendCliclListener{        void onReCommendClicl(String video_id);    }    public interface OnVideoCommentCliclListener{        void onCommentClick();    }    public interface OnVideoMoreCommentCliclListener{        void onMoreCommentClick();    }    public interface OnVideoReplyClickListener {        void onReplyClick(String commentID, String toUserId, String toUserName);    }    public void setOnVideoAuthorInfoClickListener(OnVideoAuthorInfoClickListener onVideoAuthorInfoClickListener){        this.mOnVideoAuthorInfoClickListener=onVideoAuthorInfoClickListener;    }    public void setOnVideoShareClickListener(OnVideoShareClickListener onVideoQueryMoreCommendCliclListener){        this.mOnVideoShareClickListener=onVideoQueryMoreCommendCliclListener;    }    public void setOnVideoGoodClickListener(OnVideoGoodClickListener onVideoQueryMoreCommendCliclListener){        this.mOnVideoGoodClickListener=onVideoQueryMoreCommendCliclListener;    }    public void setOnVideoQueryMoreCommendCliclListener(OnVideoQueryMoreCommendCliclListener onVideoQueryMoreCommendCliclListener){        this.mOnVideoQueryMoreCommendCliclListener=onVideoQueryMoreCommendCliclListener;    }    public void setOnVideoReCommendCliclListener(OnVideoReCommendCliclListener onVideoCommentCliclListener){        this.mOnVideoReCommendCliclListener=onVideoCommentCliclListener;    }    public void setOnVideoCommentCliclListener(OnVideoCommentCliclListener onVideoCommentCliclListener){        this.mOnVideoCommentCliclListener=onVideoCommentCliclListener;    }    public void setOnVideoMoreCommentCliclListener(OnVideoMoreCommentCliclListener onVideoCommentCliclListener){        this.msetOnVideoCommentCliclListener=onVideoCommentCliclListener;    }    public void setOnVideoReplyClickListener(OnVideoReplyClickListener onVideoReplyClickListener) {        this.mOnVideoReplyClickListener = onVideoReplyClickListener;    }    /**     * 视频设置     * @param gsy_item_video_info_content     * @param videoUrl     * @param imgUrl     */    private void initStandardGSYVideoPlayer(final StandardGSYVideoPlayer gsy_item_video_info_content, String videoUrl,String imgUrl) {        //设置资源        gsy_item_video_info_content.setUp(videoUrl, true, null, "");        ImageView mImageView = new ImageView(mContext);        mImageView.setScaleType(ImageView.ScaleType.FIT_XY);        Glide.with(mContext)                .load(imgUrl)                .apply(RequestOptions.centerInsideTransform()                        .error(R.drawable.icon_default)                        .placeholder(R.drawable.icon_default)                        .fallback(R.drawable.icon_default)                        .centerCrop()                )                .into(mImageView);        gsy_item_video_info_content.setThumbImageView(mImageView);        //设置title        gsy_item_video_info_content.getTitleTextView().setVisibility(View.GONE);        //设置返回键        gsy_item_video_info_content.getBackButton().setVisibility(View.GONE);        OrientationUtils mOrientationUtils = new OrientationUtils(activity, gsy_item_video_info_content);        mOrientationUtils.setEnable(false);        //屏幕滑动改变进度、声音        gsy_item_video_info_content.setIsTouchWiget(true);        //播放屏幕可触摸        gsy_item_video_info_content.setIsTouchWiget(true);        //关闭自动旋转        gsy_item_video_info_content.setRotateViewAuto(true);        //动画        gsy_item_video_info_content.setShowFullAnimation(false);        //全屏锁定        gsy_item_video_info_content.setNeedLockFull(true);        gsy_item_video_info_content.getFullscreenButton().setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                gsy_item_video_info_content.startWindowFullscreen(activity, false, true);            }        });    }    /**     * 修改     * @param idGood     * @param position     */    public void modifyData(boolean idGood, int position) {        if (mNewsInfoEntitys != null) {            if (idGood) {                mNewsInfoEntitys.get(position).setCommentGood(1);                String commentGoodNum = mNewsInfoEntitys.get(position).getCommentGoodNum();                if (commentGoodNum != null) {                    int num = Integer.valueOf(commentGoodNum);                    mNewsInfoEntitys.get(position).setCommentGoodNum((num + 1) + "");                }            } else {                mNewsInfoEntitys.get(position).setCommentGood(0);                String commentGoodNum = mNewsInfoEntitys.get(position).getCommentGoodNum();                if (commentGoodNum != null) {                    int num = Integer.valueOf(commentGoodNum);                    mNewsInfoEntitys.get(position).setCommentGoodNum((num - 1) + "");                }            }        }    }}