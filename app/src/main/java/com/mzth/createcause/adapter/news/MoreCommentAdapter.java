package com.mzth.createcause.adapter.news;import android.view.LayoutInflater;import android.view.View;import android.widget.EditText;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.bumptech.glide.Glide;import com.bumptech.glide.request.RequestOptions;import com.chad.library.adapter.base.BaseMultiItemQuickAdapter;import com.chad.library.adapter.base.BaseViewHolder;import com.mzth.createcause.R;import com.mzth.createcause.entity.core.NewsInfoEntity;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.view.fragment.news.IMoreCollectShareListener;import java.util.List;/** * Created by 更多评论 on 2017/10/27 0027. */public class MoreCommentAdapter extends BaseMultiItemQuickAdapter<NewsInfoEntity, BaseViewHolder> {    private IMoreCollectShareListener iMoreCollectShareListener;    private List<NewsInfoEntity> mNewsInfoEntitys;    /**     * Same as QuickAdapter#QuickAdapter(Context,int) but with     * some initialization data.     *     * @param data A new list is created out of this one to avoid mutable list     */    public MoreCommentAdapter(List<NewsInfoEntity> data) {        super(data);        mNewsInfoEntitys=data;        addItemType(NewsInfoEntity.TYPE_COMMEND, R.layout.item_news_comment);        addItemType(NewsInfoEntity.TYPE_REPLY, R.layout.item_news_reply);    }    @Override    protected void convert(final BaseViewHolder helper, final NewsInfoEntity item) {        switch (helper.getItemViewType()){            case NewsInfoEntity.TYPE_COMMEND:                ImageView iv_item_item_news_info_comment_1 = helper.getView(R.id.iv_item_item_news_info_comment_1);                Glide.with(mContext)                        .load(item.getCommentImg())                        .apply(RequestOptions.centerInsideTransform()                                .error(R.drawable.icon_r_def)                                .placeholder(R.drawable.icon_r_def)                                .fallback(R.drawable.icon_r_def)                                .centerCrop())                        .into(iv_item_item_news_info_comment_1);                if (item.getCommentGood() == 1) {                    helper.setImageResource(R.id.iv_item_item_news_info_comment_2, R.drawable.icon_praise);                } else {                    helper.setImageResource(R.id.iv_item_item_news_info_comment_2, R.drawable.icon_no_praise);                }                //昵称                helper.setText(R.id.tv_item_item_news_info_comment_1, item.getCommentName());                //时间和回复量                helper.setText(R.id.tv_item_item_news_info_comment_2, item.getCommentTime() + "\u3000" + item.getCommentReplyNum() + "条回复");                //点赞量                helper.setText(R.id.tv_item_item_news_info_comment_3, item.getCommentGoodNum());                //内容                helper.setText(R.id.tv_item_item_news_info_comment_4, item.getCommentContent());                //点赞                final LinearLayout ll_item_item_news_info_good = helper.getView(R.id.ll_item_item_news_info_good);                ll_item_item_news_info_good.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        int good = Integer.parseInt(item.getCommentGoodNum());                        if (item.getCommentGood() == 1) {                            good--;                            helper.setImageResource(R.id.iv_item_item_news_info_comment_2, R.drawable.icon_no_praise);                            helper.setText(R.id.tv_item_item_news_info_comment_3, good + "");                        } else {                            good++;                            helper.setImageResource(R.id.iv_item_item_news_info_comment_2, R.drawable.icon_praise);                            helper.setText(R.id.tv_item_item_news_info_comment_3, good + "");                        }                        ll_item_item_news_info_good.setEnabled(false);                        if (mOnMoreGoodClickListener != null) {                            mOnMoreGoodClickListener.onGoodClick(item.getCommentId(), item.getCommentGood() == 1 ? "2" : "1", helper.getLayoutPosition());                        }                    }                });                //回复                helper.getView(R.id.ll_item_item_news_info_comment).setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        if (onMoreCommentClickListener != null) {                            onMoreCommentClickListener.onReplyClick(item.getCommentId(), item.getCommentUserId(), item.getCommentName());                        }                    }                });                break;            case NewsInfoEntity.TYPE_REPLY:                helper.setText(R.id.tv_item_news_info_reply_name, item.getReplyName());                helper.setText(R.id.tv_item_news_info_reply_content, item.getReplyContent());                break;        }    }    private OnMoreGoodClickListener mOnMoreGoodClickListener;    private OnMoreCommentClickListener onMoreCommentClickListener;    public void setOnMoreGoodClickListener(OnMoreGoodClickListener mOnMoreGoodClickListener){        this.mOnMoreGoodClickListener=mOnMoreGoodClickListener;    }    public void setOnMoreCommentClickListener(OnMoreCommentClickListener onMoreCommentClickListener){        this.onMoreCommentClickListener=onMoreCommentClickListener;    }    public interface OnMoreGoodClickListener{        void onGoodClick(String commentID, String type, int position);    }    public interface OnMoreCommentClickListener{        void onReplyClick(String commentID, String toUserId, String toUserName);    }    /**     * 修改点赞状态     *     * @param idGood     * @param position     */    public void modifyData(boolean idGood, int position) {        if (mNewsInfoEntitys != null) {            if (idGood) {                mNewsInfoEntitys.get(position).setCommentGood(1);                String commentGoodNum = mNewsInfoEntitys.get(position).getCommentGoodNum();                if (commentGoodNum != null) {                    int num = Integer.valueOf(commentGoodNum);                    mNewsInfoEntitys.get(position).setCommentGoodNum((num + 1) + "");                }            } else {                mNewsInfoEntitys.get(position).setCommentGood(0);                String commentGoodNum = mNewsInfoEntitys.get(position).getCommentGoodNum();                if (commentGoodNum != null) {                    int num = Integer.valueOf(commentGoodNum);                    mNewsInfoEntitys.get(position).setCommentGoodNum((num - 1) + "");                }            }        }    }}