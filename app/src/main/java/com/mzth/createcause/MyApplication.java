package com.mzth.createcause;import android.app.Application;import android.content.Context;import android.support.multidex.MultiDex;import android.support.multidex.MultiDexApplication;import com.lzy.okgo.OkGo;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.util.RetentionDataUtil;import com.tencent.bugly.Bugly;import com.tencent.bugly.beta.Beta;import com.umeng.commonsdk.UMConfigure;import com.umeng.socialize.Config;import com.umeng.socialize.PlatformConfig;import com.umeng.socialize.UMShareAPI;/** * Created by CreateCause on 2017/9/26 0026. */public class MyApplication extends MultiDexApplication {    @Override    public void onCreate() {        super.onCreate();        OkGo.getInstance().init(this);        initUtil();        initBugly();        Config.DEBUG = true;        UMConfigure.init(this,UMConfigure.DEVICE_TYPE_PHONE, "");        UMShareAPI.get(this);        //MultiDex.install(this);    }    {        PlatformConfig.setWeixin("wx96dc9b3734056d72","01e53ba21b72ac9f9f2cb2c8f6fd7e7b");        PlatformConfig.setQQZone("1106635711", "wH4KBQBsgyrGBsrV");        PlatformConfig.setSinaWeibo("3237346831", "54f0a3b1ecf0ab124392e05c9e74e3f2","https://weibo.com/");    }    @Override    protected void attachBaseContext(Context base) {        super.attachBaseContext(base);        MultiDex.install(base);    }    private void initBugly() {        /***** Beta高级设置 *****/        /**         * true表示app启动自动初始化升级模块;         * false不会自动初始化;         * 开发者如果担心sdk初始化影响app启动速度，可以设置为false，         * 在后面某个时刻手动调用Beta.init(getApplicationContext(),false);         */        Beta.autoInit = true;        /**         * true表示初始化时自动检查升级;         * false表示不会自动检查升级,需要手动调用Beta.checkUpgrade()方法;         */        Beta.autoCheckUpgrade = false;        /**         * 设置升级检查周期为60s(默认检查周期为0s)，60s内SDK不重复向后台请求策略);         */        Beta.upgradeCheckPeriod = 60 * 1000;        /**         * 设置启动延时为1s（默认延时3s），APP启动1s后初始化SDK，避免影响APP启动速度;         */        Beta.initDelay = 1 * 1000;        /**         * 设置通知栏大图标，largeIconId为项目中的图片资源;         */        // Beta.largeIconId = R.drawable.ic_launcher;        /**         * 设置状态栏小图标，smallIconId为项目中的图片资源Id;         */        //  Beta.smallIconId = R.drawable.ic_launcher;        /**         * 设置更新弹窗默认展示的banner，defaultBannerId为项目中的图片资源Id;         * 当后台配置的banner拉取失败时显示此banner，默认不设置则展示“loading“;         */        //  Beta.defaultBannerId = R.drawable.ic_launcher;        /**         * 设置sd卡的Download为更新资源保存目录;         * 后续更新资源会保存在此目录，需要在manifest中添加WRITE_EXTERNAL_STORAGE权限;         */        //  Beta.storageDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);        /**         * 点击过确认的弹窗在APP下次启动自动检查更新时会再次显示;         */        Beta.showInterruptedStrategy = true;        /**         * 只允许在MainActivity上显示更新弹窗，其他activity上不显示弹窗;         * 不设置会默认所有activity都可以显示弹窗;         */        // Beta.canShowUpgradeActs.add(MainActivity.class);        Beta.upgradeDialogLayoutId = R.layout.upgrade_dialog;        /***** 统一初始化Bugly产品，包含Beta *****/        Bugly.init(this, "b19d0a9677", true);    }    private void initUtil() {        CommonUtil.getCommonUtil().initContext(this);        RetentionDataUtil.getRetention().initContext(this);    }}