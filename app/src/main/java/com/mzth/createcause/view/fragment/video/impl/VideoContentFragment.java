package com.mzth.createcause.view.fragment.video.impl;import android.content.Intent;import android.graphics.Color;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.widget.SwipeRefreshLayout;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import com.chad.library.adapter.base.BaseQuickAdapter;import com.mzth.createcause.R;import com.mzth.createcause.adapter.video.VideoAdapter;import com.mzth.createcause.base.BaseFragment;import com.mzth.createcause.entity.VideoContent;import com.mzth.createcause.entity.core.CoreContentEntity;import com.mzth.createcause.presenter.core.VideoPresenter;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.util.ConfigUtil;import com.mzth.createcause.util.DividerItemDecoration;import com.mzth.createcause.view.fragment.video.IVideoContentFragment;import com.shuyu.gsyvideoplayer.GSYVideoManager;import com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer;import java.util.ArrayList;import java.util.List;import java.util.Map;/** * Created by Administrator on 2017/11/2 0002. */public class VideoContentFragment extends BaseFragment implements IVideoContentFragment {    private RecyclerView rv_news_content_fragment;    private List<CoreContentEntity.InfromationContentList> mInfromationContentLists = new ArrayList<>();    private VideoAdapter mVideoAdapter;    private String typeId;    private View view;    private VideoPresenter mVideoPresenter;    private SwipeRefreshLayout srl_news_content_fragment;    public static VideoContentFragment getVideoContentFragment(String videoType) {        VideoContentFragment mVideoContentFragment = new VideoContentFragment();        mVideoContentFragment.typeId = videoType;        return mVideoContentFragment;    }    @Override    protected View createView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        view = inflater.inflate(R.layout.news_content_fragment, container, false);        mVideoPresenter = new VideoPresenter();        mVideoPresenter.initIVideoContentFragment(this);        return view;    }    @Override    protected void initView() {        rv_news_content_fragment = view.findViewById(R.id.rv_news_content_fragment);        srl_news_content_fragment = view.findViewById(R.id.srl_news_content_fragment);    }    @Override    protected void initSet() {    }    @Override    protected void initAdapter() {        rv_news_content_fragment.setLayoutManager(new LinearLayoutManager(getActivity(), LinearLayoutManager.VERTICAL, false));        rv_news_content_fragment.addItemDecoration(new DividerItemDecoration(getActivity(), LinearLayoutManager.HORIZONTAL,                CommonUtil.getCommonUtil().convertDIP(1),                Color.parseColor("#f2f2f2")));        mVideoAdapter = new VideoAdapter(mInfromationContentLists, getActivity());        rv_news_content_fragment.setAdapter(mVideoAdapter);        mVideoAdapter.setEmptyView(mNoDataView);    }    private int page = 0;    @Override    protected void initListner() {        //item        mVideoAdapter.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() {            @Override            public void onItemClick(BaseQuickAdapter adapter, View view, int position) {                Intent mIntent = new Intent();                mIntent.setClass(getActivity(), VideoInfoActivity.class);                mIntent.putExtra("VIDEOS_ID",mInfromationContentLists.get(position).getId());                mIntent.putExtra("VIDEOS_TITLE",mInfromationContentLists.get(position).getTitle());                String content = mInfromationContentLists.get(position).getContent();                mIntent.putExtra("VIDEOS_CONENT",content.length()>50?content.substring(0,50):content);                mIntent.putExtra("VIDEOS_IMG",mInfromationContentLists.get(position).getImage());                startActivity(mIntent);            }        });        //刷新        srl_news_content_fragment.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {            @Override            public void onRefresh() {                mVideoPresenter.getRefreshCoreContentData(typeId, "2", "0");            }        });        //加载数据        mVideoAdapter.setOnLoadMoreListener(new BaseQuickAdapter.RequestLoadMoreListener() {            @Override            public void onLoadMoreRequested() {                page++;                mVideoPresenter.getLoadCoreContentData(typeId, "2", page + "");            }        });        //滑动监听        rv_news_content_fragment.addOnScrollListener(new RecyclerView.OnScrollListener() {            @Override            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {                super.onScrolled(recyclerView, dx, dy);                RecyclerView.LayoutManager layoutManager = recyclerView.getLayoutManager();                if (layoutManager instanceof LinearLayoutManager) {                    LinearLayoutManager mLinearLayoutManager = (LinearLayoutManager) layoutManager;                    int mFirstCompletelyVisibleItemPosition = mLinearLayoutManager.findFirstCompletelyVisibleItemPosition();                    int mLastCompletelyVisibleItemPosition = mLinearLayoutManager.findLastCompletelyVisibleItemPosition();                    Map<Integer, StandardGSYVideoPlayer> standardGSYVideoPlayers = mVideoAdapter.getStandardGSYVideoPlayers();                    if (dy > 0) {                        //向上滑动                        StandardGSYVideoPlayer standardGSYVideoPlayer = standardGSYVideoPlayers.get(mFirstCompletelyVisibleItemPosition - 1);                        if (standardGSYVideoPlayer != null) {                            //正在播放                            if (standardGSYVideoPlayer.getCurrentState() != 0) {                                standardGSYVideoPlayer.release();                            }                        }                    } else {                        //向下滑动                        StandardGSYVideoPlayer standardGSYVideoPlayer = standardGSYVideoPlayers.get(mLastCompletelyVisibleItemPosition + 1);                        if (standardGSYVideoPlayer != null) {                            //正在播放                            if (standardGSYVideoPlayer.getCurrentState() != 0) {                                standardGSYVideoPlayer.release();                            }                        }                    }                }            }        });    }    @Override    protected void initData() {        mVideoPresenter.getCoreContentData(typeId, "2", "0");    }    @Override    public void onRequestStart() {        srl_news_content_fragment.setRefreshing(true);    }    @Override    public void onRequestFinish() {        srl_news_content_fragment.setRefreshing(false);    }    @Override    public void onRequestError() {        CommonUtil.getCommonUtil().toast(ConfigUtil.HINT_OVERTIME);    }    @Override    public void onToast(String content) {        CommonUtil.getCommonUtil().toast(content);    }    @Override    public void videoContentData(CoreContentEntity coreContentEntity) {        mInfromationContentLists.clear();        mInfromationContentLists.addAll(coreContentEntity.getmInfromationContentLists());        mVideoAdapter.notifyDataSetChanged();        pageMessage(coreContentEntity);    }    @Override    public void videoRefreshContentData(CoreContentEntity coreContentEntity) {        page = 0;        mInfromationContentLists.clear();        mInfromationContentLists.addAll(coreContentEntity.getmInfromationContentLists());        mVideoAdapter.notifyDataSetChanged();        pageMessage(coreContentEntity);    }    @Override    public void videoLoadCoreContentData(CoreContentEntity coreContentEntity) {        mInfromationContentLists.addAll(coreContentEntity.getmInfromationContentLists());        mVideoAdapter.notifyDataSetChanged();        pageMessage(coreContentEntity);    }    private void pageMessage(CoreContentEntity coreContentEntity) {        if ((page + 1) < coreContentEntity.getPage_total()) {            mVideoAdapter.loadMoreComplete();        } else {            mVideoAdapter.loadMoreEnd();        }    }}