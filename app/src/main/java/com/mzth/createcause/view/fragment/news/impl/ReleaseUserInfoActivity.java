package com.mzth.createcause.view.fragment.news.impl;import android.app.Dialog;import android.content.Intent;import android.support.design.widget.TabLayout;import android.support.v4.app.FragmentTransaction;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.text.TextUtils;import android.util.Log;import android.view.View;import android.widget.ImageView;import android.widget.TextView;import com.bumptech.glide.Glide;import com.bumptech.glide.request.RequestOptions;import com.lzy.okgo.OkGo;import com.lzy.okgo.callback.StringCallback;import com.lzy.okgo.model.Response;import com.lzy.okgo.request.base.Request;import com.mzth.createcause.R;import com.mzth.createcause.adapter.news.ReleaseUserInfoEssayAdapter;import com.mzth.createcause.adapter.news.ReleaseUserInfoVideoAdapter;import com.mzth.createcause.base.BaseActivity;import com.mzth.createcause.entity.ReleaseUserInfoEssayEntity;import com.mzth.createcause.entity.ReleaseUserInfoVideoEntity;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.util.ConfigUtil;import com.mzth.createcause.util.DividerItemDecoration;import com.shuyu.gsyvideoplayer.video.base.GSYVideoView;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import java.util.List;/** * 发布用户详情 */public class ReleaseUserInfoActivity extends BaseActivity {    private TextView base_title;    private ImageView base_iv;    private ImageView iv_auth_userinfo;    private TextView base_tv;    private TextView tv_auth_userinfo_1;    private TextView tv_auth_userinfo_2;    private TabLayout tl_news_release_user_info;    private String author_id;    private Dialog dialog;    private TitleScrollListener mTitleScrollListener;    private AuthorNewsFragment mAuthorNewsFragment;    private AuthorVideoFragment mAuthorVideoFragment;    @Override    protected void setActivity() {        setContentView(R.layout.activity_release_user_info);    }    @Override    protected void initView() {        base_title = CommonUtil.getCommonUtil().bindView(this, R.id.base_title);        base_iv = CommonUtil.getCommonUtil().bindView(this, R.id.base_iv);        base_tv = CommonUtil.getCommonUtil().bindView(this, R.id.base_tv);        tl_news_release_user_info = CommonUtil.getCommonUtil().bindView(this, R.id.tl_news_release_user_info);        iv_auth_userinfo = CommonUtil.getCommonUtil().bindView(this, R.id.iv_auth_userinfo);        tv_auth_userinfo_1 = CommonUtil.getCommonUtil().bindView(this, R.id.tv_auth_userinfo_1);        tv_auth_userinfo_2 = CommonUtil.getCommonUtil().bindView(this, R.id.tv_auth_userinfo_2);    }    @Override    protected void initSet() {        base_iv.setVisibility(View.GONE);        base_tv.setVisibility(View.GONE);        base_title.setVisibility(View.GONE);        tl_news_release_user_info.setSelectedTabIndicatorColor(getResources().getColor(R.color.colorMain));    }    @Override    protected void initAdapter() {    }    @Override    protected void initData() {        Intent intent = getIntent();        author_id = intent.getStringExtra("AUTHOR_ID");        OkGo.<String>post(ConfigUtil.AUTH_INFO)                .params("author_id", author_id)                .execute(new StringCallback() {                    @Override                    public void onStart(Request<String, ? extends Request> request) {                        super.onStart(request);                        dialog = CommonUtil.getCommonUtil().ejectLaoding(mContext, "正在加载");                    }                    @Override                    public void onError(Response<String> response) {                        super.onError(response);                        CommonUtil.getCommonUtil().toast(ConfigUtil.HINT_OVERTIME);                    }                    @Override                    public void onFinish() {                        super.onFinish();                        if (dialog != null && dialog.isShowing()) {                            dialog.dismiss();                            dialog = null;                        }                    }                    @Override                    public void onSuccess(Response<String> response) {                        Log.i(TAG, "onSuccess: "+response.body());                        try {                            JSONObject mJSONObject = new JSONObject(response.body());                            int status = mJSONObject.optInt("status");                            if (status == 1) {                                JSONObject result = mJSONObject.optJSONObject("result");                                if (result != null) {                                    result.optString("id");                                    tv_auth_userinfo_1.setText(result.optString("name"));                                    String qianming = result.optString("qianming");                                    tv_auth_userinfo_2.setText(qianming);                                    Glide.with(mContext)                                            .load(result.optString("avatar"))                                            .apply(RequestOptions.centerInsideTransform()                                                    .centerCrop()                                                    .fallback(R.drawable.uesrheader)                                                    .error(R.drawable.uesrheader)                                                    .placeholder(R.drawable.icon_r_def)                                            )                                            .into(iv_auth_userinfo);                                }                            } else {                                CommonUtil.getCommonUtil().toast(mJSONObject.optString("err_msg"));                            }                        } catch (JSONException e) {                            e.printStackTrace();                        }                    }                });        tl_news_release_user_info.addTab(tl_news_release_user_info.newTab().setText("文章"), true);        tl_news_release_user_info.addTab(tl_news_release_user_info.newTab().setText("视频"), false);    }    @Override    protected void initListener() {        mTitleScrollListener = new TitleScrollListener();        tl_news_release_user_info.addOnTabSelectedListener(mTitleScrollListener);       /* // ReleaseUserInfoEssayAdapter        tl_news_release_user_info.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {            @Override            public void onTabSelected(TabLayout.Tab tab) {                int position = tab.getPosition();                selectStatus(position);            }            @Override            public void onTabUnselected(TabLayout.Tab tab) {            }            @Override            public void onTabReselected(TabLayout.Tab tab) {            }        });*/    }    private void selectStatus(int type) {        GSYVideoView.releaseAllVideos();        switch (type) {            case 0:                FragmentTransaction mFragmentTransactionNews = getSupportFragmentManager().beginTransaction();                if (mAuthorNewsFragment == null) {                    mAuthorNewsFragment = AuthorNewsFragment.getAuthorNewsFragment(author_id);                    mFragmentTransactionNews.add(R.id.fl_release_auth_info, mAuthorNewsFragment);                }                mFragmentTransactionNews.show(mAuthorNewsFragment);                if (mAuthorVideoFragment != null) {                    mFragmentTransactionNews.hide(mAuthorVideoFragment);                }                mFragmentTransactionNews.commitAllowingStateLoss();                break;            case 1:                FragmentTransaction mFragmentTransactionVideo = getSupportFragmentManager().beginTransaction();                if (mAuthorVideoFragment == null) {                    mAuthorVideoFragment = AuthorVideoFragment.getAuthorVideoFragment(author_id);                    mFragmentTransactionVideo.add(R.id.fl_release_auth_info, mAuthorVideoFragment);                }                mFragmentTransactionVideo.show(mAuthorVideoFragment);                if (mAuthorNewsFragment != null) {                    mFragmentTransactionVideo.hide(mAuthorNewsFragment);                }                mFragmentTransactionVideo.commitAllowingStateLoss();                break;        }    }    private class TitleScrollListener implements TabLayout.OnTabSelectedListener {        @Override        public void onTabSelected(TabLayout.Tab tab) {            selectStatus(tab.getPosition());        }        @Override        public void onTabUnselected(TabLayout.Tab tab) {        }        @Override        public void onTabReselected(TabLayout.Tab tab) {        }    }    @Override    protected void onDestroy() {        super.onDestroy();        if (mTitleScrollListener != null && tl_news_release_user_info != null) {            tl_news_release_user_info.removeOnTabSelectedListener(mTitleScrollListener);        }    }}