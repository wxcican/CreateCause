package com.mzth.createcause.view.fragment.user.commerce;import android.app.Dialog;import android.content.Intent;import android.support.v4.widget.SwipeRefreshLayout;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.view.View;import android.widget.ImageView;import android.widget.TextView;import com.chad.library.adapter.base.BaseQuickAdapter;import com.lzy.okgo.OkGo;import com.lzy.okgo.callback.StringCallback;import com.lzy.okgo.model.Response;import com.lzy.okgo.request.base.Request;import com.mzth.createcause.R;import com.mzth.createcause.adapter.user.CommerceAdapter;import com.mzth.createcause.base.BaseActivity;import com.mzth.createcause.entity.CommerceEntity;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.util.ConfigUtil;import com.mzth.createcause.util.DividerItemDecoration;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import java.util.List;/** * 商学院 */public class CommerceActivity extends BaseActivity {    private RecyclerView rc_user_commerce;    private SwipeRefreshLayout srl_user_commerce;    private TextView base_title;    private ImageView base_iv;    private TextView base_tv;    private CommerceAdapter mCommerceAdapter;    private Dialog dialog;    private List<CommerceEntity.CommereceList> mCommereceList = new ArrayList<>();    private int page = 0;    @Override    protected void setActivity() {        setContentView(R.layout.activity_commerce);    }    @Override    protected void initView() {        base_title = CommonUtil.getCommonUtil().bindView(this, R.id.base_title);        base_iv = CommonUtil.getCommonUtil().bindView(this, R.id.base_iv);        base_tv = CommonUtil.getCommonUtil().bindView(this, R.id.base_tv);        rc_user_commerce = CommonUtil.getCommonUtil().bindView(this, R.id.rc_user_commerce);        srl_user_commerce = CommonUtil.getCommonUtil().bindView(this, R.id.srl_user_commerce);    }    @Override    protected void initSet() {        base_title.setText("商学院");        base_iv.setVisibility(View.GONE);        base_tv.setVisibility(View.GONE);    }    @Override    protected void initAdapter() {        rc_user_commerce.setLayoutManager(new LinearLayoutManager(mContext, LinearLayoutManager.VERTICAL, false));        rc_user_commerce.addItemDecoration(new DividerItemDecoration(mContext,                LinearLayoutManager.HORIZONTAL,                CommonUtil.getCommonUtil().convertDIP(1),                getResources().getColor(R.color.colorDiv)));        mCommerceAdapter = new CommerceAdapter(mCommereceList);        rc_user_commerce.setAdapter(mCommerceAdapter);        mCommerceAdapter.setEmptyView(mNoDataView);    }    @Override    protected void initData() {        netWorkData(page, false,false);    }    @Override    protected void initListener() {        //加载        mCommerceAdapter.setOnLoadMoreListener(new BaseQuickAdapter.RequestLoadMoreListener() {            @Override            public void onLoadMoreRequested() {                page++;                netWorkData(page, true,false);            }        }, rc_user_commerce);        //刷新        srl_user_commerce.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {            @Override            public void onRefresh() {                page=0;                netWorkData(page, false,true);            }        });        //Item        mCommerceAdapter.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() {            @Override            public void onItemClick(BaseQuickAdapter adapter, View view, int position) {                jumpCommerceInfoActicity(mCommereceList.get(position).getId());            }        });    }    /**     * 获取数据     *     * @param page     * @param isLoadData     */    private void netWorkData(int page, final boolean isLoadData, final boolean isRefresh) {        OkGo.<String>post(ConfigUtil.BUSINESS_SCHOOL)                .params("page", page + "")                .params("length", "20")                .execute(new StringCallback() {                    @Override                    public void onStart(Request<String, ? extends Request> request) {                        super.onStart(request);                        if (!isLoadData&&!isRefresh) {                            dialog = CommonUtil.getCommonUtil().ejectLaoding(mContext, "正在加载");                        }                    }                    @Override                    public void onError(Response<String> response) {                        super.onError(response);                        CommonUtil.getCommonUtil().toast(ConfigUtil.HINT_OVERTIME);                    }                    @Override                    public void onFinish() {                        super.onFinish();                        if (!isLoadData&&!isRefresh) {                            if (dialog != null && dialog.isShowing()) {                                dialog.dismiss();                                dialog = null;                            }                        }                    }                    @Override                    public void onSuccess(Response<String> response) {                        try {                            CommerceEntity mCommerceEntity = new CommerceEntity(new JSONObject(response.body()));                            if (mCommerceEntity.getStatus() == 1) {                                if (isRefresh) {                                    mCommereceList.clear();                                }                                mCommereceList.addAll(mCommerceEntity.getmCommereceLists());                                mCommerceAdapter.notifyDataSetChanged();                                if ((mCommerceEntity.getPage() + 1) < mCommerceEntity.getPage_total()) {                                    mCommerceAdapter.loadMoreComplete();                                } else {                                    mCommerceAdapter.loadMoreEnd();                                }                                if(srl_user_commerce.isRefreshing()){                                    srl_user_commerce.setRefreshing(false);                                }                            } else {                                CommonUtil.getCommonUtil().toast(mCommerceEntity.getErr_msg());                            }                        } catch (JSONException e) {                            e.printStackTrace();                        }                    }                });    }    private void jumpCommerceInfoActicity(String commerceId){        Intent mIntent=new Intent(mContext,CommerceInfoActicity.class);        mIntent.putExtra("COMMERCE",commerceId);        startActivity(mIntent);    }}