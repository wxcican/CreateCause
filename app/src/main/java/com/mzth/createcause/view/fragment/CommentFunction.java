package com.mzth.createcause.view.fragment;import android.app.Activity;import android.app.Dialog;import android.content.Intent;import android.text.TextUtils;import android.util.Log;import com.lzy.okgo.OkGo;import com.lzy.okgo.callback.StringCallback;import com.lzy.okgo.model.Response;import com.lzy.okgo.request.base.Request;import com.mzth.createcause.adapter.news.ReleaseCommentActivity;import com.mzth.createcause.base.BasePresenter;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.util.ConfigUtil;import com.mzth.createcause.util.RetentionDataUtil;import com.mzth.createcause.view.fragment.news.impl.MoreCommentActivity;import com.mzth.createcause.view.fragment.news.impl.NewsInfoActivity;import com.mzth.createcause.view.fragment.news.impl.ReleaseUserInfoActivity;import com.umeng.socialize.ShareAction;import com.umeng.socialize.UMShareListener;import com.umeng.socialize.bean.SHARE_MEDIA;import com.umeng.socialize.media.UMImage;import com.umeng.socialize.media.UMWeb;import org.json.JSONException;import org.json.JSONObject;import java.security.MessageDigest;import java.security.NoSuchAlgorithmException;/** * Created by Administrator on 2018/1/29 0029. */public class CommentFunction extends BasePresenter {    private static CommentFunction mCommentFunction;    private OnGoodSuccessListener onGoodSuccessListener;    private Dialog dialog;    private CommentFunction() {    }    public static CommentFunction getCommentFunction() {        if (mCommentFunction == null) {            mCommentFunction = new CommentFunction();        }        return mCommentFunction;    }    /**     * 点赞     *     * @param news_id     * @param commentID     * @param userId     * @param type     */    public void actionGood(String news_id, String commentID, String userId, String type) {        OkGo.<String>post(ConfigUtil.RELEASE_GOOD)                .params("news_id", news_id)                .params("comment_id", commentID)                .params("user_id", userId)                .params("status", type)                .execute(new StringCallback() {                    @Override                    public void onSuccess(Response<String> response) {                        try {                            JSONObject mJSONObject = new JSONObject(response.body());                            int status = mJSONObject.optInt("status");                            if (status == 1) {                                if (onGoodSuccessListener != null) {                                    onGoodSuccessListener.onSuccess();                                }                            }                        } catch (JSONException e) {                            e.printStackTrace();                        }                    }                });    }    /**     * 评论     *     * @param activity     * @param news_id     */    public void actionComment(Activity activity, String news_id) {        Intent mIntent = new Intent();        mIntent.setClass(activity, ReleaseCommentActivity.class);        mIntent.putExtra("INFO_ID", news_id);        activity.startActivity(mIntent);    }    /**     * 回复评论     *     * @param activity     * @param commentID     * @param toUserId     * @param toUserName     */    public void actionReply(Activity activity, String commentID, String toUserId, String toUserName) {        Intent mIntent = new Intent();        mIntent.setClass(activity, ReleaseCommentActivity.class);        mIntent.putExtra("COMMENT_ID", commentID);        mIntent.putExtra("COMMENT_USER_ID", toUserId);        mIntent.putExtra("COMMENT_USER_NAME", toUserName);        activity.startActivity(mIntent);    }    /**     * 查看更多评论     *     * @param activity     * @param news_id     */    public void actionMore(Activity activity, String news_id, String info_title, String info_content, String info_img) {        Intent mIntent = new Intent();        mIntent.setClass(activity, MoreCommentActivity.class);        mIntent.putExtra("IINFO_ID", news_id);        mIntent.putExtra("INFO_TITLE", info_title);        mIntent.putExtra("INFO_CONTENT", info_content);        mIntent.putExtra("INFO_IMG", info_img);        activity.startActivity(mIntent);    }    /**     * 分享     *     * @param activity        当前活动     * @param newsID          信息id     * @param title           标题     * @param imgUri          图片连接     * @param umShareListener 分享回调     */    public void actionShare(final Activity activity, final String newsID, final String title, final String content, final String imgUri, final UMShareListener umShareListener) {        String task_uri = RetentionDataUtil.getRetention().getString("TASK_URI", "");        String task_id = RetentionDataUtil.getRetention().getString("TASK_ID", "");        Log.i("---------", "task_id: " + task_id);        if (TextUtils.isEmpty(task_uri)) {            //普通分享            OkGo.<String>post(ConfigUtil.TASK_URL)                    .execute(new StringCallback() {                        @Override                        public void onStart(Request<String, ? extends Request> request) {                            super.onStart(request);                            dialog = CommonUtil.getCommonUtil().ejectLaoding(activity, "请稍后");                        }                        @Override                        public void onFinish() {                            super.onFinish();                            if (dialog != null && dialog.isShowing()) {                                dialog.dismiss();                                dialog = null;                            }                        }                        @Override                        public void onSuccess(Response<String> response) {                            try {                                JSONObject mJsonObject = new JSONObject(response.body());                                int status = mJsonObject.optInt("status");                                if (status == 1) {                                    String result = mJsonObject.optString("result", "http://zx.zmgov.com") + "/detail/";                                    String url = result + "?id=" + MD5(newsID);                                    share(activity, imgUri, url, title, content, umShareListener);                                }                            } catch (JSONException e) {                                e.printStackTrace();                            }                        }                    });        } else {            String url = task_uri + "/detail/?id=" + MD5(newsID) + "&uid=" + user_Id + "&task_id=" + task_id;            Log.i("--------------", "actionShare: " + url);            share(activity, imgUri, url, title, content, umShareListener);        }    }    /**     * 分享     *     * @param activity     * @param imgUri     * @param uri     * @param title     * @param content     * @param umShareListener     */    private void share(Activity activity, String imgUri, String uri, String title, String content, UMShareListener umShareListener) {        UMImage image = new UMImage(activity, imgUri);//网络图片        UMWeb web = new UMWeb(uri);        web.setTitle(TextUtils.isEmpty(title) ? "创业宗" : title);//标题        web.setThumb(image);  //缩略图        web.setDescription(TextUtils.isEmpty(content) ? "创业宗" : content);//描述        new ShareAction(activity)                .withMedia(web)                .setDisplayList(SHARE_MEDIA.WEIXIN, SHARE_MEDIA.QQ, SHARE_MEDIA.SINA)                .setCallback(umShareListener)                .open();    }    /**     * 分享成功     *     * @param userID 用户ID     * @param infoID 分享信息ID     */    public void shareEnd(String userID, String infoID) {        String task_id = RetentionDataUtil.getRetention().getString("TASK_ID", "");        if (!TextUtils.isEmpty(task_id)) {            //需要回调            OkGo.<String>post("http://cyz.zmgov.com/home/record/share")                    .params("uid", userID)                    .params("tid", task_id)                    .params("nid", infoID)                    .execute(new StringCallback() {                        @Override                        public void onSuccess(Response<String> response) {                            Log.i("-----", "onSuccess: " + response.body());                        }                    });        }    }    /**     * 发布者详情     *     * @param activity     * @param authorId     */    public void actionAuthorInfo(Activity activity, String authorId) {        Intent mIntent = new Intent();        mIntent.setClass(activity, ReleaseUserInfoActivity.class);        mIntent.putExtra("AUTHOR_ID", authorId);        activity.startActivity(mIntent);    }    public interface OnGoodSuccessListener {        void onSuccess();    }    public void setOnGoodSuccessListener(OnGoodSuccessListener onGoodSuccessListener) {        this.onGoodSuccessListener = onGoodSuccessListener;    }    /**     * 加密     *     * @param s     * @return     */    private String MD5(String s) {        String md5 = "";        try {            MessageDigest mMessageDigest = MessageDigest.getInstance("MD5");            byte[] mDigest = mMessageDigest.digest(s.getBytes());            StringBuilder mStringBuilder = new StringBuilder();            for (byte b : mDigest) {                int number = b & 0xff;                String mToHexString = Integer.toHexString(number);                if (mToHexString.length() == 1) {                    mStringBuilder.append("0" + mToHexString);                } else {                    mStringBuilder.append(mToHexString);                }            }            md5 = mStringBuilder.toString();        } catch (NoSuchAlgorithmException e) {            e.printStackTrace();        }        return md5;    }}