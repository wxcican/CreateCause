package com.mzth.createcause.view.fragment.user.info.impl;import android.app.Dialog;import android.content.Intent;import android.graphics.Color;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.view.View;import android.widget.ImageView;import android.widget.RelativeLayout;import android.widget.TextView;import com.chad.library.adapter.base.BaseQuickAdapter;import com.lzy.okgo.OkGo;import com.lzy.okgo.callback.StringCallback;import com.lzy.okgo.model.Response;import com.lzy.okgo.request.base.Request;import com.mzth.createcause.R;import com.mzth.createcause.adapter.user.ExtractAdapter;import com.mzth.createcause.base.BaseActivity;import com.mzth.createcause.entity.user.ExtractAccountEntity;import com.mzth.createcause.entity.user.ExtractAccountEntity.AccountList;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.util.ConfigUtil;import com.mzth.createcause.util.DividerItemDecoration;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import java.util.List;/** * 提现账号 */public class ExtractAccountNumberActivity extends BaseActivity {    private RecyclerView rv_extract;    private TextView base_title;    private ImageView base_iv;    private TextView base_tv;    private RelativeLayout base_rl;    private ExtractAdapter mExtractAdapter;    private Dialog dialog;    private List<AccountList> mAccountLists=new ArrayList<>();    @Override    protected void setActivity() {        setContentView(R.layout.activity_extract_account_number);    }    @Override    protected void initView() {        base_title = CommonUtil.getCommonUtil().bindView(this, R.id.base_title);        base_iv = CommonUtil.getCommonUtil().bindView(this, R.id.base_iv);        base_tv = CommonUtil.getCommonUtil().bindView(this, R.id.base_tv);        base_rl = CommonUtil.getCommonUtil().bindView(this, R.id.base_rl);        rv_extract = CommonUtil.getCommonUtil().bindView(this, R.id.rv_extract);    }    @Override    protected void initSet() {        base_title.setText("提现账号");        base_iv.setVisibility(View.VISIBLE);        base_iv.setImageResource(R.drawable.add_btn);        base_tv.setVisibility(View.GONE);    }    @Override    protected void initAdapter() {        rv_extract.setLayoutManager(new LinearLayoutManager(mContext, LinearLayoutManager.VERTICAL, false));        rv_extract.addItemDecoration(new DividerItemDecoration(mContext,                LinearLayoutManager.HORIZONTAL,                CommonUtil.getCommonUtil().convertDIP(1),                Color.parseColor("#f2f2f2")));        mExtractAdapter = new ExtractAdapter(mAccountLists);        rv_extract.setAdapter(mExtractAdapter);        mExtractAdapter.setEmptyView(mNoDataView);    }    @Override    protected void initData() {        OkGo.<String>post(ConfigUtil.ZHB_LIST)                .params("user_id",userId)                .params("auth_key",userKey)                .execute(new StringCallback() {                    @Override                    public void onStart(Request<String, ? extends Request> request) {                        super.onStart(request);                        dialog = CommonUtil.getCommonUtil().ejectLaoding(mContext, "正在加载");                    }                    @Override                    public void onError(Response<String> response) {                        super.onError(response);                        CommonUtil.getCommonUtil().toast(ConfigUtil.HINT_OVERTIME);                    }                    @Override                    public void onFinish() {                        super.onFinish();                        if(dialog!=null&&dialog.isShowing()){                            dialog.dismiss();                            dialog=null;                        }                    }                    @Override                    public void onSuccess(Response<String> response) {                        try {                            ExtractAccountEntity mExtractAccountEntity=new ExtractAccountEntity(new JSONObject(response.body()));                            if(mExtractAccountEntity.getStatus()==1){                                mAccountLists.clear();                                mAccountLists.addAll(mExtractAccountEntity.getmAccountList());                                mExtractAdapter.notifyDataSetChanged();                            }else {                                CommonUtil.getCommonUtil().toast(mExtractAccountEntity.getErr_msg());                            }                        } catch (JSONException e) {                            e.printStackTrace();                        }                    }                });    }    @Override    protected void initListener() {        //绑定账号        base_rl.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent mIntent = new Intent();                mIntent.setClass(mContext, BindAccountNumberActivity.class);                startActivityForResult(mIntent,300);            }        });    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if(requestCode==300&&resultCode==301){            initData();        }    }}