package com.mzth.createcause.view.fragment.user.outpupil;import android.content.Intent;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.view.View;import android.widget.EditText;import android.widget.ImageView;import android.widget.TextView;import com.chad.library.adapter.base.BaseQuickAdapter;import com.mzth.createcause.R;import com.mzth.createcause.adapter.user.OutPupliAdapterContent;import com.mzth.createcause.adapter.user.OutPupliAdapterTitle;import com.mzth.createcause.base.BaseActivity;import com.mzth.createcause.entity.OutPopilEntity_copy;import com.mzth.createcause.presenter.user.OutPopilPressenter;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.util.DividerItemDecoration;import com.mzth.createcause.view.fragment.user.member.MemberInfoActivity;import java.util.ArrayList;import java.util.List;public class OutPupilActivity extends BaseActivity implements IOutPupilActivity {    private OutPopilPressenter mOutPopilPressenter;    private TextView base_title;    private TextView tv_out_pupli_content_hint;    private ImageView base_iv;    private TextView base_tv;    private RecyclerView rv_out_pupli_content;    private RecyclerView rv_out_pupli_title;    private int index = 0;    private TextView tv_out_pupli_content_1;    private EditText et_out_pupli_content_1;    @Override    protected void setActivity() {        setContentView(R.layout.activity_out_pupil);        mOutPopilPressenter = OutPopilPressenter.getOutPopilPressenter();        mOutPopilPressenter.initIOutPupilAdapter(this);    }    @Override    protected void initView() {        base_title = CommonUtil.getCommonUtil().bindView(this, R.id.base_title);        base_iv = CommonUtil.getCommonUtil().bindView(this, R.id.base_iv);        base_tv = CommonUtil.getCommonUtil().bindView(this, R.id.base_tv);        rv_out_pupli_content = CommonUtil.getCommonUtil().bindView(this, R.id.rv_out_pupli_content);        rv_out_pupli_title = CommonUtil.getCommonUtil().bindView(this, R.id.rv_out_pupli_title);        tv_out_pupli_content_hint = CommonUtil.getCommonUtil().bindView(this, R.id.tv_out_pupli_content_hint);        et_out_pupli_content_1 = CommonUtil.getCommonUtil().bindView(this, R.id.et_out_pupli_content_1);        tv_out_pupli_content_1 = CommonUtil.getCommonUtil().bindView(this, R.id.tv_out_pupli_content_1);    }    @Override    protected void initSet() {        base_title.setText("外门弟子");        base_iv.setVisibility(View.GONE);        base_tv.setVisibility(View.GONE);    }    @Override    protected void initAdapter() {    }    @Override    protected void initData() {        mOutPopilPressenter.initContentData();    }    @Override    protected void initListener() {        tv_out_pupli_content_1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                mOutPopilPressenter.findContent(et_out_pupli_content_1.getText().toString().trim());            }        });    }    @Override    public void initAdapter(final List<OutPopilEntity_copy> mOutPopilEntity_copys) {        OutPupliAdapterContent mOutPupliAdapterContent = new OutPupliAdapterContent(mOutPopilEntity_copys);        final LinearLayoutManager linearLayoutManager = new LinearLayoutManager(mContext, LinearLayoutManager.VERTICAL, false);        rv_out_pupli_content.setLayoutManager(linearLayoutManager);        rv_out_pupli_content.addItemDecoration(new DividerItemDecoration(mContext,                LinearLayoutManager.HORIZONTAL,                CommonUtil.getCommonUtil().convertDIP(1),                getResources().getColor(R.color.colorDiv)));        rv_out_pupli_content.setAdapter(mOutPupliAdapterContent);        final List<String> mTitles = new ArrayList<>();        String title = "";        for (int i = 0; i < mOutPopilEntity_copys.size(); i++) {            String userInitial = mOutPopilEntity_copys.get(i).getUserInitial();            if (!userInitial.equals(title)) {                title = userInitial;                mTitles.add(userInitial);            }        }        OutPupliAdapterTitle mOutPupliAdapterTitle = new OutPupliAdapterTitle(mTitles);        if (mTitles.size() != 0) {            rv_out_pupli_title.setLayoutManager(new GridLayoutManager(mContext, mTitles.size(), GridLayoutManager.HORIZONTAL, false));            rv_out_pupli_title.setAdapter(mOutPupliAdapterTitle);        }        mOutPupliAdapterTitle.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() {            @Override            public void onItemClick(BaseQuickAdapter adapter, View view, int position) {                String titleLetter = mTitles.get(position);                for (int i = 0; i < mOutPopilEntity_copys.size(); i++) {                    String initial = mOutPopilEntity_copys.get(i).getUserInitial();                    if (titleLetter.equals(initial)) {                        index = i;                        break;                    }                }                tv_out_pupli_content_hint.setText(titleLetter);                mOutPopilPressenter.initHintVisStaius();                linearLayoutManager.scrollToPositionWithOffset(index, 0);            }        });        mOutPupliAdapterContent.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() {            @Override            public void onItemClick(BaseQuickAdapter adapter, View view, int position) {                Intent mIntent = new Intent();                mIntent.setClass(mContext, MemberInfoActivity.class);                startActivity(mIntent);            }        });    }    @Override    public void setVisibilityStatus(int visibility) {        tv_out_pupli_content_hint.setVisibility(visibility);    }}