package com.mzth.createcause.view.fragment.user.set;import android.app.Dialog;import android.content.Context;import android.graphics.Bitmap;import android.graphics.Canvas;import android.graphics.Matrix;import android.graphics.drawable.BitmapDrawable;import android.graphics.drawable.Drawable;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.text.Html;import android.util.DisplayMetrics;import android.view.View;import android.widget.ImageView;import android.widget.TextView;import com.bumptech.glide.Glide;import com.bumptech.glide.request.target.SimpleTarget;import com.bumptech.glide.request.transition.Transition;import com.lzy.okgo.OkGo;import com.lzy.okgo.callback.StringCallback;import com.lzy.okgo.model.Response;import com.lzy.okgo.request.base.Request;import com.mzth.createcause.R;import com.mzth.createcause.adapter.news.NewsInfoAdapter;import com.mzth.createcause.base.BaseActivity;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.util.ConfigUtil;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;/** * 关于创业宗 */public class AboutAppActivity extends BaseActivity {    private TextView base_title;    private ImageView base_iv;    private TextView base_tv;    private Dialog dialog;    private TextView tv_about_1;    private TextView tv_about_2;    private TextView tv_about_3;    private TextView tv_about_4;    @Override    protected void setActivity() {        setContentView(R.layout.activity_about_app);    }    @Override    protected void initView() {        base_title = CommonUtil.getCommonUtil().bindView(this, R.id.base_title);        base_iv = CommonUtil.getCommonUtil().bindView(this, R.id.base_iv);        base_tv = CommonUtil.getCommonUtil().bindView(this, R.id.base_tv);        tv_about_1 = CommonUtil.getCommonUtil().bindView(this, R.id.tv_about_1);        tv_about_2 = CommonUtil.getCommonUtil().bindView(this, R.id.tv_about_2);        tv_about_3 = CommonUtil.getCommonUtil().bindView(this, R.id.tv_about_3);        tv_about_4 = CommonUtil.getCommonUtil().bindView(this, R.id.tv_about_4);    }    @Override    protected void initSet() {        base_title.setText("关于创业宗");        base_iv.setVisibility(View.GONE);        base_tv.setVisibility(View.GONE);    }    @Override    protected void initAdapter() {    }    @Override    protected void initData() {        OkGo.<String>post(ConfigUtil.SET_ABOUT)                .execute(new StringCallback() {                    @Override                    public void onStart(Request<String, ? extends Request> request) {                        super.onStart(request);                        dialog = CommonUtil.getCommonUtil().ejectLaoding(mContext, "正在加载");                    }                    @Override                    public void onError(Response<String> response) {                        super.onError(response);                        CommonUtil.getCommonUtil().toast(ConfigUtil.HINT_OVERTIME);                    }                    @Override                    public void onFinish() {                        super.onFinish();                        if (dialog != null && dialog.isShowing()) {                            dialog.dismiss();                            dialog = null;                        }                    }                    @Override                    public void onSuccess(Response<String> response) {                        try {                            JSONObject mJSONObject = new JSONObject(response.body());                            int status = mJSONObject.optInt("status");                            if (status == 1) {                                JSONObject result = mJSONObject.optJSONObject("result");                                if (result != null) {                                    String text = result.optString("text");                                    tv_about_1.setText(Html.fromHtml(text, new AboutAppActivity.URLImageParser(mContext, tv_about_1), null));                                    JSONArray call = result.optJSONArray("call");                                    if (call != null) {                                        for (int i = 0; i < call.length(); i++) {                                            JSONObject jsonObject = call.optJSONObject(i);                                            String way = jsonObject.optString("way");                                            if (way.equals("微信")) {                                                tv_about_2.setText(way + ": " + jsonObject.getString("number"));                                            } else if (way.equals("qq")) {                                                tv_about_3.setText(way + ": " + jsonObject.getString("number"));                                            } else if (way.equals("电话")) {                                                tv_about_4.setText(way + ": " + jsonObject.getString("number"));                                            }                                        }                                    }                                }                            } else {                                CommonUtil.getCommonUtil().toast(mJSONObject.optString("err_msg"));                            }                        } catch (JSONException e) {                            e.printStackTrace();                        }                    }                });    }    @Override    protected void initListener() {    }    public class URLImageParser implements Html.ImageGetter {        private Context context;        private TextView tvContent;        private int actX;//实际的宽  放大缩小基于textview的宽度        private int actY;        public URLImageParser(Context context, TextView tvContent) {            this.context = context;            this.tvContent = tvContent;            //获取全屏大小            DisplayMetrics metrics = context.getResources().getDisplayMetrics();            //我的textview有左右留边  margin            actX = metrics.widthPixels - CommonUtil.getCommonUtil().convertDIP(20);            actY = metrics.heightPixels;        }        @Override        public Drawable getDrawable(String source) {            final AboutAppActivity.URLDrawable urlDrawable = new AboutAppActivity.URLDrawable();            Glide.with(context)                    .asBitmap()                    .load(source)                    .into(new SimpleTarget<Bitmap>() {                        @Override                        public void onResourceReady(Bitmap resource, Transition<? super Bitmap> transition) {                            int x = resource.getWidth();                            int y = resource.getHeight();                            if (x > actX || y > actY) {                                //进行等比例缩放程序                                Matrix matrix = new Matrix();                                matrix.postScale((float) (actX * 1.00 / x), (float) (actX * 1.00 / x));                                //长和宽放大缩小的比例                                resource = Bitmap.createBitmap(resource, 0, 0, x, y, matrix, true);                            }                            urlDrawable.bitmap = resource;                            urlDrawable.setBounds(0, 0, resource.getWidth(), resource.getHeight());                            tvContent.invalidate();                            tvContent.setText(tvContent.getText()); // 解决图文重叠                        }                    });            return urlDrawable;        }    }    private class URLDrawable extends BitmapDrawable {        protected Bitmap bitmap;        @Override        public void draw(Canvas canvas) {            if (bitmap != null) {                canvas.drawBitmap(bitmap, 0, 0, getPaint());            }        }    }}