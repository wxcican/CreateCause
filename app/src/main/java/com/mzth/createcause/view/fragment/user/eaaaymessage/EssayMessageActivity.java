package com.mzth.createcause.view.fragment.user.eaaaymessage;import android.app.Dialog;import android.content.Intent;import android.graphics.Color;import android.graphics.drawable.BitmapDrawable;import android.support.v4.widget.SwipeRefreshLayout;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.Gravity;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.PopupWindow;import android.widget.RelativeLayout;import android.widget.TextView;import com.chad.library.adapter.base.BaseQuickAdapter;import com.lzy.okgo.OkGo;import com.lzy.okgo.callback.StringCallback;import com.lzy.okgo.model.Response;import com.lzy.okgo.request.base.Request;import com.mzth.createcause.R;import com.mzth.createcause.adapter.user.EssayMessageAdapter;import com.mzth.createcause.base.BaseActivity;import com.mzth.createcause.entity.user.EssayMessageEntity;import com.mzth.createcause.entity.user.EssayMessageEntity.EssayMessageList;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.util.ConfigUtil;import com.mzth.createcause.util.DividerItemDecoration;import com.mzth.createcause.view.shareui.SearchActivity;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import java.util.List;/** * 文章管理 */public class EssayMessageActivity extends BaseActivity {    private TextView base_title;    private ImageView base_iv;    private TextView base_tv;    //搜索    private RelativeLayout base_rl;    //全选    private LinearLayout ll_user_essay_message;    private ImageView iv_user_essay_message;    private boolean isAllSelect = false;    //内容    private RecyclerView rv_user_essay_message;    //下线    private TextView tv_user_essay_message_1;    //草稿箱    private TextView tv_user_essay_message_2;    //发布    private TextView tv_user_essay_message_3;    //适配器    private EssayMessageAdapter mEssayMessageAdapter;    private List<EssayMessageList> mEssayMessageLists = new ArrayList<>();    private PopupWindow mPopupWindow;    private Dialog dialog;    private SwipeRefreshLayout srl_user_essay_message;    @Override    protected void setActivity() {        setContentView(R.layout.activity_essay_message);    }    @Override    protected void initView() {        base_title = CommonUtil.getCommonUtil().bindView(this, R.id.base_title);        base_iv = CommonUtil.getCommonUtil().bindView(this, R.id.base_iv);        base_tv = CommonUtil.getCommonUtil().bindView(this, R.id.base_tv);        base_rl = CommonUtil.getCommonUtil().bindView(this, R.id.base_rl);        ll_user_essay_message = CommonUtil.getCommonUtil().bindView(this, R.id.ll_user_essay_message);        iv_user_essay_message = CommonUtil.getCommonUtil().bindView(this, R.id.iv_user_essay_message);        rv_user_essay_message = CommonUtil.getCommonUtil().bindView(this, R.id.rv_user_essay_message);        tv_user_essay_message_1 = CommonUtil.getCommonUtil().bindView(this, R.id.tv_user_essay_message_1);        tv_user_essay_message_2 = CommonUtil.getCommonUtil().bindView(this, R.id.tv_user_essay_message_2);        tv_user_essay_message_3 = CommonUtil.getCommonUtil().bindView(this, R.id.tv_user_essay_message_3);        srl_user_essay_message = CommonUtil.getCommonUtil().bindView(this, R.id.srl_user_essay_message);    }    @Override    protected void initSet() {        base_title.setText("文章管理");        base_iv.setVisibility(View.GONE);        base_tv.setVisibility(View.GONE);    }    @Override    protected void initAdapter() {        mEssayMessageAdapter = new EssayMessageAdapter(mEssayMessageLists);        rv_user_essay_message.setLayoutManager(new LinearLayoutManager(mContext, LinearLayoutManager.VERTICAL, false));        rv_user_essay_message.addItemDecoration(new DividerItemDecoration(mContext,                LinearLayoutManager.HORIZONTAL,                CommonUtil.getCommonUtil().convertDIP(1),                getResources().getColor(R.color.colorDiv)));        rv_user_essay_message.setAdapter(mEssayMessageAdapter);        mEssayMessageAdapter.setEmptyView(mNoDataView);    }    @Override    protected void initData() {        initNetData(0, false, false);    }    @Override    protected void initListener() {        //搜索        base_rl.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent mIntent = new Intent();                mIntent.setClass(mContext, SearchActivity.class);                startActivity(mIntent);            }        });        //下线        tv_user_essay_message_1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                StringBuffer mStringBuffer = new StringBuffer();                for (int i = 0; i < mEssayMessageLists.size(); i++) {                    EssayMessageList essayMessageList = mEssayMessageLists.get(i);                    if (essayMessageList.isSelect()) {                        mStringBuffer.append(essayMessageList.getId() + ",");                    }                }                if (mStringBuffer.length() == 0) {                    CommonUtil.getCommonUtil().toast("请选择文章进行操作");                } else {                    ReleaseUtil.getReleaseUtil().actionEssagStatus(EssayMessageActivity.this, userId, userKey, mStringBuffer.substring(0, mStringBuffer.length() - 1), "1");                    ReleaseUtil.getReleaseUtil().setOnEssaySelectListener(new ReleaseUtil.OnEssaySelectListener() {                        @Override                        public void onEssaySelect() {                            iv_user_essay_message.setSelected(false);                            mEssayMessageLists.clear();                            initNetData(0, false, false);                        }                    });                }            }        });        //全选        ll_user_essay_message.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(mEssayMessageLists.size()>0){                    if (iv_user_essay_message.isSelected()) {                        iv_user_essay_message.setSelected(false);                        for (int i = 0; i < mEssayMessageLists.size(); i++) {                            mEssayMessageLists.get(i).setSelect(false);                            mEssayMessageAdapter.notifyDataSetChanged();                        }                    } else {                        iv_user_essay_message.setSelected(true);                        for (int i = 0; i < mEssayMessageLists.size(); i++) {                            mEssayMessageLists.get(i).setSelect(true);                            mEssayMessageAdapter.notifyDataSetChanged();                        }                    }                }            }        });        //发布        tv_user_essay_message_3.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                showReleasePop();            }        });        //草稿箱        tv_user_essay_message_2.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent mIntent = new Intent();                mIntent.setClass(mContext, EssayDraftActivity.class);                startActivityForResult(mIntent,500);            }        });        //刷新        srl_user_essay_message.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {            @Override            public void onRefresh() {                page = 0;                initNetData(page, false, true);            }        });        //加载        mEssayMessageAdapter.setOnLoadMoreListener(new BaseQuickAdapter.RequestLoadMoreListener() {            @Override            public void onLoadMoreRequested() {                page++;                initNetData(page, true, false);            }        }, rv_user_essay_message);        //选择情况        mEssayMessageAdapter.setOnSelectListener(new EssayMessageAdapter.OnSelectMessageListener() {            @Override            public void onSelectMessage(boolean selectStatus) {                iv_user_essay_message.setSelected(selectStatus);            }        });        //单条下线        mEssayMessageAdapter.setOnCancelEssayMessageListener(new EssayMessageAdapter.OnCancelEssayMessageListener() {            @Override            public void onCancelEssayMessage(String essayId) {                ReleaseUtil.getReleaseUtil().actionEssagStatus(EssayMessageActivity.this, userId, userKey,essayId, "1");                ReleaseUtil.getReleaseUtil().setOnEssaySelectListener(new ReleaseUtil.OnEssaySelectListener() {                    @Override                    public void onEssaySelect() {                        iv_user_essay_message.setSelected(false);                        mEssayMessageLists.clear();                        initNetData(0, false, false);                    }                });            }        });    }    private int page = 0;    /**     * 弹出发布选择框     */    private void showReleasePop() {        View view = LayoutInflater.from(mContext).inflate(R.layout.item_show_user_essay_message, null);        //发布文章        LinearLayout ll_show_user_release_essay = CommonUtil.getCommonUtil().bindView(view, R.id.ll_show_user_release_essay);        //发布视频        LinearLayout ll_show_user_release_video = CommonUtil.getCommonUtil().bindView(view, R.id.ll_show_user_release_video);        mPopupWindow = CommonUtil.getCommonUtil().showPopWindowIsButtom(mContext, view, tv_user_essay_message_1, getWindow());        //发布文章        ll_show_user_release_essay.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (mPopupWindow != null && mPopupWindow.isShowing()) {                    mPopupWindow.dismiss();                }                Intent mIntent = new Intent();                mIntent.setClass(mContext, ReleaseActivity.class);                mIntent.putExtra("Release", RELEASE_ESSAY);                startActivity(mIntent);            }        });        //发布视频        ll_show_user_release_video.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (mPopupWindow != null && mPopupWindow.isShowing()) {                    mPopupWindow.dismiss();                }                Intent mIntent = new Intent();                mIntent.setClass(mContext, ReleaseActivity.class);                mIntent.putExtra("Release", RELEASE_VIDEO);                startActivity(mIntent);            }        });    }    /**     * 初始化网路数据     *     * @param page     * @param isLoad     * @param isRefresh     */    private void initNetData(int page, final boolean isLoad, final boolean isRefresh) {        OkGo.<String>post(ConfigUtil.REQUEST_ESSAT_LIST)                .params("user_id", userId)                .params("auth_key", userKey)                .params("status", "2")                .params("page", page + "")                .execute(new StringCallback() {                    @Override                    public void onStart(Request<String, ? extends Request> request) {                        super.onStart(request);                        if (!isLoad && !isRefresh) {                            dialog = CommonUtil.getCommonUtil().ejectLaoding(mContext, "正在加载");                        }                    }                    @Override                    public void onError(Response<String> response) {                        super.onError(response);                        CommonUtil.getCommonUtil().toast(ConfigUtil.HINT_OVERTIME);                    }                    @Override                    public void onFinish() {                        super.onFinish();                        if (!isLoad && !isRefresh) {                            if (dialog != null && dialog.isShowing()) {                                dialog.dismiss();                                dialog = null;                            }                        }                        if (srl_user_essay_message.isRefreshing()) {                            srl_user_essay_message.setRefreshing(false);                        }                    }                    @Override                    public void onSuccess(Response<String> response) {                        try {                            EssayMessageEntity mEssayMessageEntity = new EssayMessageEntity(new JSONObject(response.body()));                            if (mEssayMessageEntity.getStatus() == 1) {                                if (isRefresh) {                                    mEssayMessageLists.clear();                                }                                mEssayMessageLists.addAll(mEssayMessageEntity.getmEssayMessageLists());                                mEssayMessageAdapter.notifyDataSetChanged();                                if (mEssayMessageEntity.getPage() + 1 < mEssayMessageEntity.getPage_total()) {                                    mEssayMessageAdapter.loadMoreComplete();                                } else {                                    mEssayMessageAdapter.loadMoreEnd();                                }                            } else {                                CommonUtil.getCommonUtil().toast(mEssayMessageEntity.getErr_mag());                            }                        } catch (JSONException e) {                            e.printStackTrace();                        }                    }                });    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if(requestCode==500){            if(resultCode==501){                mEssayMessageLists.clear();                initNetData(0, false, false);            }        }    }}