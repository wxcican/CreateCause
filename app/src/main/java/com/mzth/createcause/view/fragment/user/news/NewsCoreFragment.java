package com.mzth.createcause.view.fragment.user.news;import android.app.Dialog;import android.content.Intent;import android.support.annotation.Nullable;import android.os.Bundle;import android.support.v4.widget.SwipeRefreshLayout;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import com.chad.library.adapter.base.BaseQuickAdapter;import com.mzth.createcause.R;import com.mzth.createcause.adapter.user.NewsCoreAdapter;import com.mzth.createcause.base.BaseFragment;import com.mzth.createcause.entity.user.NewsCoreEntity;import com.mzth.createcause.presenter.user.UserNewsCorePresenter;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.util.ConfigUtil;import com.mzth.createcause.util.DividerItemDecoration;import java.util.ArrayList;import java.util.List;public class NewsCoreFragment extends BaseFragment implements INewsCoreFragment {    private View view;    private RecyclerView rv_core_news;    private SwipeRefreshLayout srl_core_news;    private Dialog dialog;    private UserNewsCorePresenter mUserNewsCorePresenter;    private List<NewsCoreEntity.UserNewsNewsList> mUserNewsNewsLists = new ArrayList<>();    private NewsCoreAdapter mNewsCoreAdapter;    private int page = 0;    private TextView newsTitle;    @Override    protected View createView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        view = inflater.inflate(R.layout.activity_news_core_fragment, container, false);        mUserNewsCorePresenter = new UserNewsCorePresenter();        mUserNewsCorePresenter.initUserNewsFragment(this);        return view;    }    @Override    protected void initView() {        rv_core_news = view.findViewById(R.id.rv_core_news);        srl_core_news = view.findViewById(R.id.srl_core_news);    }    @Override    protected void initSet() {    }    @Override    protected void initAdapter() {        mNewsCoreAdapter = new NewsCoreAdapter(mUserNewsNewsLists);        rv_core_news.setLayoutManager(new LinearLayoutManager(mContext, LinearLayoutManager.VERTICAL, false));        rv_core_news.addItemDecoration(new DividerItemDecoration(mContext,                LinearLayoutManager.HORIZONTAL,                CommonUtil.getCommonUtil().convertDIP(5),                getResources().getColor(R.color.colorBackround)));        rv_core_news.setAdapter(mNewsCoreAdapter);        mNewsCoreAdapter.setEmptyView(mNoDataView);    }    @Override    protected void initListner() {        //刷新数据        srl_core_news.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {            @Override            public void onRefresh() {                mUserNewsCorePresenter.getRefreshUserNewData("0");            }        });        //加载        mNewsCoreAdapter.setOnLoadMoreListener(new BaseQuickAdapter.RequestLoadMoreListener() {            @Override            public void onLoadMoreRequested() {                page++;                mUserNewsCorePresenter.getLoadUserNewData(page + "");            }        }, rv_core_news);        //查看详情        mNewsCoreAdapter.setOnItemChildClickListener(new BaseQuickAdapter.OnItemChildClickListener() {            @Override            public void onItemChildClick(BaseQuickAdapter adapter, View view, int position) {                actionJumpNewsCoreInfoActivity(mUserNewsNewsLists.get(position).getId());            }        });    }    @Override    protected void initData() {        mUserNewsCorePresenter.getUserNewData("0");    }    @Override    public void onRequestStart() {        dialog = CommonUtil.getCommonUtil().ejectLaoding(mContext, "正在加载");    }    @Override    public void onRequestFinish() {        if (dialog != null && dialog.isShowing()) {            dialog.dismiss();        }        if (srl_core_news.isRefreshing()) {            srl_core_news.setRefreshing(false);        }    }    @Override    public void onRequestError() {        CommonUtil.getCommonUtil().toast(ConfigUtil.HINT_OVERTIME);    }    @Override    public void onToast(String content) {        CommonUtil.getCommonUtil().toast(content);    }    @Override    public void initUserNewsNewsData(NewsCoreEntity newsCoreEntity) {        mUserNewsNewsLists.clear();        mUserNewsNewsLists.addAll(newsCoreEntity.getmUserNewsNewsLists());        mNewsCoreAdapter.notifyDataSetChanged();        initPage(newsCoreEntity);    }    @Override    public void refreshUserNewsNewsData(NewsCoreEntity newsCoreEntity) {        mUserNewsNewsLists.clear();        mUserNewsNewsLists.addAll(newsCoreEntity.getmUserNewsNewsLists());        mNewsCoreAdapter.notifyDataSetChanged();        initPage(newsCoreEntity);    }    @Override    public void loadUserNewsNewsData(NewsCoreEntity newsCoreEntity) {        mUserNewsNewsLists.addAll(newsCoreEntity.getmUserNewsNewsLists());        mNewsCoreAdapter.notifyDataSetChanged();        initPage(newsCoreEntity);    }    /**     * 初始化Page     *     * @param newsCoreEntity     */    private void initPage(NewsCoreEntity newsCoreEntity) {        if ((newsCoreEntity.getPage() + 1) < newsCoreEntity.getPage_total()) {            mNewsCoreAdapter.loadMoreComplete();        } else {            mNewsCoreAdapter.loadMoreEnd();        }        newsTitle.setText(newsCoreEntity.getNo_look()==0?"通知":"通知("+newsCoreEntity.getNo_look()+")");    }    /**     * 获取消息标题控件     * @param textView     */    public void getTitleTextView(TextView textView) {        this.newsTitle = textView;    }    /**     * 跳转详情     * @param id     */    private void actionJumpNewsCoreInfoActivity(String id){        Intent mIntent=new Intent(mContext,NewsCoreInfoActivity.class);        mIntent.putExtra("NEWSCORE_ID",id);       startActivityForResult(mIntent,100);    }    @Override    public void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if(requestCode==100&&resultCode==101){            mUserNewsCorePresenter.getUserNewData("0");        }    }}