package com.mzth.createcause.view.fragment.video.impl;import android.app.Dialog;import android.content.Intent;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.View;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.mzth.createcause.R;import com.mzth.createcause.adapter.news.ReleaseCommentActivity;import com.mzth.createcause.adapter.video.VideoInfoAdapter;import com.mzth.createcause.base.BaseActivity;import com.mzth.createcause.entity.VideoInfoEntity;import com.mzth.createcause.entity.core.NewsInfoEntity;import com.mzth.createcause.presenter.core.VideoInfoPressenter;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.util.ConfigUtil;import com.mzth.createcause.util.RetentionDataUtil;import com.mzth.createcause.view.fragment.CommentFunction;import com.mzth.createcause.view.fragment.news.impl.MoreCommentActivity;import com.mzth.createcause.view.fragment.news.impl.NewsInfoActivity;import com.mzth.createcause.view.fragment.video.IVideoInfoActivity;import com.umeng.socialize.UMShareAPI;import com.umeng.socialize.UMShareListener;import com.umeng.socialize.bean.SHARE_MEDIA;import java.util.ArrayList;import java.util.List;public class VideoInfoActivity extends BaseActivity implements IVideoInfoActivity {    private TextView base_title;    private ImageView base_iv;    private TextView base_tv;    private RecyclerView rv_video_info;    private VideoInfoPressenter mVideoInfoActivity;    private List<NewsInfoEntity> mNewsInfoEntitys = new ArrayList<>();    private VideoInfoAdapter mVideoInfoAdapter;    private Dialog dialog;    private String videos_id;    private String videos_title;    private String videos_conent;    private String videos_img;    @Override    protected void setActivity() {        setContentView(R.layout.activity_video_info);        mVideoInfoActivity = new VideoInfoPressenter();        mVideoInfoActivity.initIVideoInfoActivity(this);    }    @Override    protected void initView() {        base_title = CommonUtil.getCommonUtil().bindView(this, R.id.base_title);        base_iv = CommonUtil.getCommonUtil().bindView(this, R.id.base_iv);        base_tv = CommonUtil.getCommonUtil().bindView(this, R.id.base_tv);        rv_video_info = CommonUtil.getCommonUtil().bindView(this, R.id.rv_video_info);    }    @Override    protected void initSet() {        base_iv.setVisibility(View.GONE);        base_tv.setVisibility(View.GONE);        base_title.setText("视频详情");        Intent mIntent=getIntent();        videos_id = mIntent.getStringExtra("VIDEOS_ID");        videos_title = mIntent.getStringExtra("VIDEOS_TITLE");        videos_conent = mIntent.getStringExtra("VIDEOS_CONENT");        videos_img = mIntent.getStringExtra("VIDEOS_IMG");    }    @Override    protected void initAdapter() {        mVideoInfoAdapter = new VideoInfoAdapter(mNewsInfoEntitys, VideoInfoActivity.this);        rv_video_info.setLayoutManager(new LinearLayoutManager(mContext, LinearLayoutManager.VERTICAL, false));        rv_video_info.setAdapter(mVideoInfoAdapter);        mVideoInfoAdapter.setEmptyView(mNoDataView);    }    @Override    protected void initData() {        mVideoInfoActivity.initVideoInfoData(videos_id);    }    @Override    protected void initListener() {        //评论        mVideoInfoAdapter.setOnVideoCommentCliclListener(new VideoInfoAdapter.OnVideoCommentCliclListener() {            @Override            public void onCommentClick() {                CommentFunction.getCommentFunction().actionComment(VideoInfoActivity.this, videos_id);            }        });        //更多评论        mVideoInfoAdapter.setOnVideoMoreCommentCliclListener(new VideoInfoAdapter.OnVideoMoreCommentCliclListener() {            @Override            public void onMoreCommentClick() {                MoreCommentActivity.comment_tyupe = "VIDEO";                CommentFunction.getCommentFunction().actionMore(VideoInfoActivity.this, videos_id,videos_title,videos_conent,videos_img);            }        });        //推荐        mVideoInfoAdapter.setOnVideoReCommendCliclListener(new VideoInfoAdapter.OnVideoReCommendCliclListener() {            @Override            public void onReCommendClicl(String video_id) {                Intent mIntent = new Intent();                mIntent.setClass(mContext, VideoInfoActivity.class);                mIntent.putExtra("VIDEOS_ID", video_id);                startActivity(mIntent);                finish();            }        });        //回复        mVideoInfoAdapter.setOnVideoReplyClickListener(new VideoInfoAdapter.OnVideoReplyClickListener() {            @Override            public void onReplyClick(String commentID, String toUserId, String toUserName) {                CommentFunction.getCommentFunction().actionReply(VideoInfoActivity.this, commentID, toUserId, toUserName);            }        });        //查看更多评论        mVideoInfoAdapter.setOnVideoQueryMoreCommendCliclListener(new VideoInfoAdapter.OnVideoQueryMoreCommendCliclListener() {            @Override            public void onVideoQueryMoreCommendClicl() {                if (mNewsInfoEntitys != null && videos_id != null) {                    page++;                    mVideoInfoActivity.queryCommentData(videos_id, page, mNewsInfoEntitys);                }            }        });        //点赞        mVideoInfoAdapter.setOnVideoGoodClickListener(new VideoInfoAdapter.OnVideoGoodClickListener() {            @Override            public void onVideoGoodClick(String commentID, final String type, final int position) {                CommentFunction.getCommentFunction().actionGood(videos_id, commentID, userId, type);                CommentFunction.getCommentFunction().setOnGoodSuccessListener(new CommentFunction.OnGoodSuccessListener() {                    @Override                    public void onSuccess() {                        Log.i(TAG, "视频点赞回调: ");                        mVideoInfoAdapter.modifyData(type.endsWith("1"), position);                    }                });            }        });        //分享        mVideoInfoAdapter.setOnVideoShareClickListener(new VideoInfoAdapter.OnVideoShareClickListener() {            @Override            public void onVideoShareClick() {                CommentFunction.getCommentFunction().actionShare(VideoInfoActivity.this,                        videos_id,                        videos_title,                        videos_conent,                        videos_img,                        shareListener                );            }        });        //查看发布者详情        mVideoInfoAdapter.setOnVideoAuthorInfoClickListener(new VideoInfoAdapter.OnVideoAuthorInfoClickListener() {            @Override            public void onVideoAuthorInfoClick(String authID) {                CommentFunction.getCommentFunction().actionAuthorInfo(VideoInfoActivity.this,authID);            }        });    }    private int page = 0;    @Override    public void onRequestStart() {        dialog = CommonUtil.getCommonUtil().ejectLaoding(mContext, "正在加载");    }    @Override    public void onRequestFinish() {        if (dialog != null && dialog.isShowing()) {            dialog.dismiss();            dialog = null;        }    }    @Override    public void onRequestError() {        CommonUtil.getCommonUtil().toast(ConfigUtil.HINT_OVERTIME);    }    @Override    public void onToast(String content) {        CommonUtil.getCommonUtil().toast(content);    }    @Override    public void initVideoInfoData(List<NewsInfoEntity> newsInfoEntities) {        mNewsInfoEntitys.clear();        mNewsInfoEntitys.addAll(newsInfoEntities);        mVideoInfoAdapter.notifyDataSetChanged();    }    @Override    public void initVideoInfoCommentData(List<NewsInfoEntity> newsInfoEntities) {        mVideoInfoAdapter.notifyDataSetChanged();    }    @Override    protected void onResume() {        super.onResume();        if (RetentionDataUtil.getRetention().getBoolean("INFO_TAG", false)) {            RetentionDataUtil.getRetention().setBoolean("INFO_TAG", false);            RetentionDataUtil.getRetention().setBoolean("MORE_TAG", false);            if (mVideoInfoActivity != null && videos_id != null) {                mVideoInfoActivity.initVideoInfoData(videos_id);            }        }    }    private UMShareListener shareListener = new UMShareListener() {        /**         * @descrption 分享开始的回调         * @param platform 平台类型         */        @Override        public void onStart(SHARE_MEDIA platform) {        }        /**         * @descrption 分享成功的回调         * @param platform 平台类型         */        @Override        public void onResult(SHARE_MEDIA platform) {            CommentFunction.getCommentFunction().shareEnd(userId,videos_id);        }        /**         * @descrption 分享失败的回调         * @param platform 平台类型         * @param t 错误原因         */        @Override        public void onError(SHARE_MEDIA platform, Throwable t) {            Log.i(TAG, "失败: ");        }        /**         * @descrption 分享取消的回调         * @param platform 平台类型         */        @Override        public void onCancel(SHARE_MEDIA platform) {            Log.i(TAG, "取消了: ");        }    };    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        UMShareAPI.get(this).onActivityResult(requestCode, resultCode, data);    }}