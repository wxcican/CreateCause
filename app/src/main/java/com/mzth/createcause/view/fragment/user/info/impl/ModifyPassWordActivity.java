package com.mzth.createcause.view.fragment.user.info.impl;import android.app.Dialog;import android.text.TextUtils;import android.util.Log;import android.view.View;import android.widget.EditText;import android.widget.ImageView;import android.widget.TextView;import com.lzy.okgo.OkGo;import com.lzy.okgo.callback.StringCallback;import com.lzy.okgo.model.Response;import com.lzy.okgo.request.base.Request;import com.mzth.createcause.R;import com.mzth.createcause.base.BaseActivity;import com.mzth.createcause.util.CommonUtil;import com.mzth.createcause.util.ConfigUtil;import com.mzth.createcause.util.RetentionDataUtil;import org.json.JSONException;import org.json.JSONObject;/** * 修改密码 */public class ModifyPassWordActivity extends BaseActivity {    private TextView base_title;    private ImageView base_iv;    private TextView base_tv;    private TextView btn_modify_pwd;    private EditText et_modify_pwd_1;    private EditText et_modify_pwd_2;    private EditText et_modify_pwd_3;    private Dialog dialog;    @Override    protected void setActivity() {        setContentView(R.layout.activity_modify_pass_word);    }    @Override    protected void initView() {        base_title = CommonUtil.getCommonUtil().bindView(this, R.id.base_title);        base_iv = CommonUtil.getCommonUtil().bindView(this, R.id.base_iv);        base_tv = CommonUtil.getCommonUtil().bindView(this, R.id.base_tv);        btn_modify_pwd = CommonUtil.getCommonUtil().bindView(this, R.id.btn_modify_pwd);        et_modify_pwd_1 = CommonUtil.getCommonUtil().bindView(this, R.id.et_modify_pwd_1);        et_modify_pwd_2 = CommonUtil.getCommonUtil().bindView(this, R.id.et_modify_pwd_2);        et_modify_pwd_3 = CommonUtil.getCommonUtil().bindView(this, R.id.et_modify_pwd_3);    }    @Override    protected void initSet() {        base_title.setText("修改密码");        base_iv.setVisibility(View.GONE);        base_tv.setVisibility(View.GONE);    }    @Override    protected void initAdapter() {    }    @Override    protected void initData() {    }    @Override    protected void initListener() {        btn_modify_pwd.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                String pwdPast = et_modify_pwd_1.getText().toString().trim();                String pwdNews = et_modify_pwd_2.getText().toString().trim();                String pwdNewss = et_modify_pwd_3.getText().toString().trim();                if (TextUtils.isEmpty(pwdPast)) {                    CommonUtil.getCommonUtil().toast("请输入您的旧密码");                } else if (TextUtils.isEmpty(pwdNews)) {                    CommonUtil.getCommonUtil().toast("请输入您的新密码");                } else if (TextUtils.isEmpty(pwdNewss)) {                    CommonUtil.getCommonUtil().toast("请确认您的新密码");                } else if (!pwdNews.equals(pwdNewss)) {                    CommonUtil.getCommonUtil().toast("俩次密码输入不同");                } else {                    Log.i(TAG, "onClick: "+pwdPast);                    Log.i(TAG, "onClick: "+pwdNews);                    Log.i(TAG, "onClick: "+pwdNewss);                    OkGo.<String>post(ConfigUtil.MODIFY_PWD)                            .params("user_id", userId)                            .params("auth_key", userKey)                            .params("old_password", pwdPast)                            .params("new_password", pwdNews)                            .params("new_password_two", pwdNewss)                            .execute(new StringCallback() {                                @Override                                public void onStart(Request<String, ? extends Request> request) {                                    super.onStart(request);                                    dialog = CommonUtil.getCommonUtil().ejectLaoding(mContext, "正在提交");                                }                                @Override                                public void onError(Response<String> response) {                                    super.onError(response);                                    CommonUtil.getCommonUtil().toast(ConfigUtil.HINT_OVERTIME);                                }                                @Override                                public void onFinish() {                                    super.onFinish();                                    if (dialog != null && dialog.isShowing()) {                                        dialog.dismiss();                                        dialog = null;                                    }                                }                                @Override                                public void onSuccess(Response<String> response) {                                    try {                                        JSONObject mJSONObject=new JSONObject(response.body());                                        int status = mJSONObject.optInt("status");                                        if(status==1){                                            CommonUtil.getCommonUtil().toast(mJSONObject.optString("result"));                                            finish();                                        }else {                                            CommonUtil.getCommonUtil().toast(mJSONObject.optString("err_msg"));                                        }                                    } catch (JSONException e) {                                        e.printStackTrace();                                    }                                }                            });                }            }        });    }}