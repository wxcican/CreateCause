package com.mzth.createcause.base.custom;import android.content.Context;import android.graphics.Bitmap;import android.graphics.Canvas;import android.graphics.Paint;import android.graphics.PorterDuff;import android.graphics.PorterDuffXfermode;import android.graphics.Rect;import android.graphics.RectF;import android.graphics.drawable.BitmapDrawable;import android.graphics.drawable.Drawable;import android.support.v7.widget.AppCompatImageView;import android.util.AttributeSet;/** * Created by on 2017/3/20. * */public class RadiusUserImageView extends AppCompatImageView {    private Paint paint;    public RadiusUserImageView(Context context) {        this(context, null);    }    public RadiusUserImageView(Context context, AttributeSet attrs) {        this(context, attrs, 0);    }    public RadiusUserImageView(Context context, AttributeSet attrs, int defStyle) {        super(context, attrs, defStyle);        paint = new Paint();    }    @Override    protected void onDraw(Canvas canvas) {        Drawable drawable = getDrawable();        if (null != drawable) {            Bitmap bitmap = ((BitmapDrawable) drawable).getBitmap();            Bitmap b = getRoundedCornerBitmap(bitmap);            final Rect rectSrc = new Rect(0, 0, b.getWidth(), b.getHeight());            final Rect rectDest = new Rect(0, 0, getWidth(), getHeight());            paint.reset();            canvas.drawBitmap(b, rectSrc, rectDest, paint);        } else {            super.onDraw(canvas);        }    }    public static Bitmap getRoundedCornerBitmap(Bitmap bitmap) {        int w = bitmap.getWidth();        int h = bitmap.getHeight();        Bitmap output = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);        Canvas canvas = new Canvas(output);        final int color = 0xff424242;        final Paint paint = new Paint();        final Rect rect = new Rect(0, 0, w, h);        final RectF rectF = new RectF(rect);        paint.setAntiAlias(true);        canvas.drawARGB(0, 0, 0, 0);        paint.setColor(color);        canvas.drawRoundRect(rectF, w/2, h/2, paint);        paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));        canvas.drawBitmap(bitmap, rect, rect, paint);        return output;    }}