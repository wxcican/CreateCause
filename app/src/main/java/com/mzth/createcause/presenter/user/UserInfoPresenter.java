package com.mzth.createcause.presenter.user;import android.content.Context;import android.util.Log;import com.lljjcoder.citypickerview.widget.CityPicker;import com.lzy.okgo.callback.StringCallback;import com.lzy.okgo.model.Response;import com.lzy.okgo.request.base.Request;import com.mzth.createcause.base.BasePresenter;import com.mzth.createcause.entity.user.UserInfoEntity;import com.mzth.createcause.model.user.impl.UserInfoModel;import com.mzth.createcause.view.fragment.user.info.IUserInfoActivity;import org.json.JSONException;import org.json.JSONObject;/** * Created by Administrator on 2017/10/12 0012. */public class UserInfoPresenter extends BasePresenter {    private IUserInfoActivity mIUserInfoActivity;    public void initIUserInfoActivity(IUserInfoActivity userInfoActivity) {        this.mIUserInfoActivity = userInfoActivity;    }    /**     * 打开城市选择器     *     * @param context     */    public void openCityMessage(Context context) {        UserInfoModel.getIUserInfoModel().getCity(context, new CityPicker.OnCityItemClickListener() {            @Override            public void onSelected(String... citySelected) {                //省份                String province = citySelected[0];                //城市                String city = citySelected[1];                //区县（如果设定了两级联动，那么该项返回空）                String district = citySelected[2];                //为TextView赋值                if (mIUserInfoActivity != null) {                    mIUserInfoActivity.getCity(province + "-" + city + "-" + district);                }            }        });    }    /**     * 初始化用户中详情数据     */    public void initUserInfoData() {        UserInfoModel.getIUserInfoModel().queryUserInfoData(user_Id, auth_key, new StringCallback() {            @Override            public void onStart(Request<String, ? extends Request> request) {                super.onStart(request);                if (mIUserInfoActivity != null) {                    mIUserInfoActivity.onRequestStart();                }            }            @Override            public void onFinish() {                super.onFinish();                if (mIUserInfoActivity != null) {                    mIUserInfoActivity.onRequestFinish();                }            }            @Override            public void onError(Response<String> response) {                super.onError(response);                if (mIUserInfoActivity != null) {                    mIUserInfoActivity.onRequestError();                }            }            @Override            public void onSuccess(Response<String> response) {                try {                    UserInfoEntity mUserInfoEntity=new UserInfoEntity(new JSONObject(response.body()));                    if(mUserInfoEntity.getStatus()==1){                        if (mIUserInfoActivity != null) {                            mIUserInfoActivity.userInfoData(mUserInfoEntity);                        }                    }else {                        if (mIUserInfoActivity != null) {                            mIUserInfoActivity.onToast(mUserInfoEntity.getErr_msg());                        }                    }                } catch (JSONException e) {                    e.printStackTrace();                }            }        });    }}