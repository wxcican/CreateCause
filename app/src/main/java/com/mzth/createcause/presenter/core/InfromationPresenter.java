package com.mzth.createcause.presenter.core;import com.lzy.okgo.callback.StringCallback;import com.lzy.okgo.model.Response;import com.lzy.okgo.request.base.Request;import com.mzth.createcause.base.BasePresenter;import com.mzth.createcause.entity.core.CoreContentEntity;import com.mzth.createcause.entity.core.CoreTypeEntity;import com.mzth.createcause.model.core.InfromationVideoDataModel;import com.mzth.createcause.view.fragment.news.INewFragment;import com.mzth.createcause.view.fragment.news.INewsContentFragment;import org.json.JSONException;import org.json.JSONObject;/** * Created by Administrator on 2018/1/17 0017. */public class InfromationPresenter extends BasePresenter {    private INewFragment mINewFragment;    private INewsContentFragment mINewsContentFragment;    /**     * 初始化资讯界面     *     * @param iNewFragment     */    public void initNewFragment(INewFragment iNewFragment) {        this.mINewFragment = iNewFragment;    }    /**     * 初始化资讯内容界面     */    public void initNewContentFragment(INewsContentFragment iNewsContentFragment) {        this.mINewsContentFragment = iNewsContentFragment;    }    /**     * 获取分类数据     */    public void getTypeData() {        InfromationVideoDataModel.getInfromationVideoType().queryType(new StringCallback() {            @Override            public void onStart(Request<String, ? extends Request> request) {                super.onStart(request);                if (mINewFragment != null) {                    mINewFragment.onRequestStart();                }            }            @Override            public void onFinish() {                super.onFinish();                if (mINewFragment != null) {                    mINewFragment.onRequestFinish();                }            }            @Override            public void onError(Response<String> response) {                super.onError(response);                if (mINewFragment != null) {                    mINewFragment.onRequestError();                }            }            @Override            public void onSuccess(Response<String> response) {                try {                    CoreTypeEntity mInfromactionTypeEntity = new CoreTypeEntity(new JSONObject(response.body()));                    if (mInfromactionTypeEntity.getStatus() == 1) {                        if (mINewFragment != null) {                            mINewFragment.typeData(mInfromactionTypeEntity.getInfromactionTypeLists());                        }                    } else {                        if (mINewFragment != null) {                            mINewFragment.onToast(mInfromactionTypeEntity.getErr_msg());                        }                    }                } catch (JSONException e) {                    e.printStackTrace();                }            }        });    }    /**     * 获取数据     */    public void getCoreContentData(String typeID, String type, String page) {        InfromationVideoDataModel.getInfromationVideoContent().queryContent(typeID, type, page, new StringCallback() {            @Override            public void onStart(Request<String, ? extends Request> request) {                super.onStart(request);                if (mINewsContentFragment != null) {                    mINewsContentFragment.onRequestStart();                }            }            @Override            public void onError(Response<String> response) {                super.onError(response);                if (mINewsContentFragment != null) {                    mINewsContentFragment.onRequestError();                }            }            @Override            public void onFinish() {                super.onFinish();                if (mINewsContentFragment != null) {                    mINewsContentFragment.onRequestFinish();                }            }            @Override            public void onSuccess(Response<String> response) {                if (mINewsContentFragment != null) {                    try {                        mINewsContentFragment.infromationLoadCoreContentData(new CoreContentEntity(new JSONObject(response.body())));                    } catch (JSONException e) {                        e.printStackTrace();                    }                }            }            @Override            public void onCacheSuccess(Response<String> response) {                super.onCacheSuccess(response);                if (mINewsContentFragment != null) {                    try {                        mINewsContentFragment.infromationLoadCoreContentData(new CoreContentEntity(new JSONObject(response.body())));                    } catch (JSONException e) {                        e.printStackTrace();                    }                }            }        });    }    /**     * 刷新数据     *     * @param typeID     * @param type     * @param page     */    public void getRefreshCoreContentData(String typeID, String type, String page) {        InfromationVideoDataModel.getInfromationVideoContent().queryContent(typeID, type, page, new StringCallback() {            @Override            public void onSuccess(Response<String> response) {                if (mINewsContentFragment != null) {                    try {                        CoreContentEntity mCoreContentEntity = new CoreContentEntity(new JSONObject(response.body()));                        if(mCoreContentEntity.getStatus()==1){                            mINewsContentFragment.infromationContentData(mCoreContentEntity);                        }else {                            mINewsContentFragment.onToast(mCoreContentEntity.getErr_msg());                        }                    } catch (JSONException e) {                        e.printStackTrace();                    }                }            }            @Override            public void onError(Response<String> response) {                super.onError(response);                if (mINewsContentFragment != null) {                    mINewsContentFragment.onRequestError();                }            }            @Override            public void onFinish() {                super.onFinish();                if (mINewsContentFragment != null) {                    mINewsContentFragment.onRequestFinish();                }            }        });    }    /**     * 加载数据     * @param typeID     * @param type     * @param page     */    public void getLoadCoreContentData(String typeID,String type, String page){        InfromationVideoDataModel.getInfromationVideoContent().queryContent(typeID, type, page, new StringCallback() {            @Override            public void onSuccess(Response<String> response) {                try {                    mINewsContentFragment.infromationLoadCoreContentData(new CoreContentEntity(new JSONObject(response.body())));                } catch (JSONException e) {                    e.printStackTrace();                }            }        });    }}